<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <!-- Perceptions -->
    <record id="hr_rule_l10n_mx_payroll_perception_001_g_bf" model="hr.salary.rule">
        <field name="name">Sueldos, Salarios Rayas y Jornales</field>
        <field name="sequence" eval="1000"/>
        <field name="code">PG001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    # In case commission or raised price
    payment_daily = (contract.wage / 30)
    holidays = worked_days.dict.get('LEAVE120') and worked_days.LEAVE120.number_of_days or 0.0
    out = worked_days.dict.get('OUT') and worked_days.OUT.number_of_days or 0.0
    # Not enjoyed holiday days
    work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
    holiday_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))
    if contract.l10n_mx_edi_schedule_pay ==  '01':
        result = payment_daily - holidays - out
    elif contract.l10n_mx_edi_schedule_pay ==  '02':
        result = payment_daily * (7 - holidays - out)
    elif contract.l10n_mx_edi_schedule_pay == '03':
        result = payment_daily * (14 - holidays - out)
    elif contract.l10n_mx_edi_schedule_pay == '04':
        result = payment_daily * (15 - holidays - out)
    elif contract.l10n_mx_edi_schedule_pay == '05':
        result = payment_daily * (30 - holidays - out)
    elif contract.l10n_mx_edi_schedule_pay == '06':
        result = payment_daily * (60 - holidays - out)
    elif contract.l10n_mx_edi_schedule_pay == '10':
        result = payment_daily * (10 - holidays - out)
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_001_holidays_bf" model="hr.salary.rule">
        <field name="name">Vacaciones</field>
        <field name="sequence" eval="1010"/>
        <field name="code">PGH001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays = worked_days.dict.get('LEAVE120') and worked_days.LEAVE120.number_of_days or 0.0
holidays += inputs.pgh_001.amount if inputs.pgh_001 else 0
payment_daily = (contract.wage / 30)
work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
holiday_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))
holidays = 0 if holiday_not_enjoyed &gt;= holidays else holidays - holiday_not_enjoyed
result = payment_daily * holidays
        </field>
    </record>
    <record id="hr_payslip_input_type_perception_001_holidays_bf" model="hr.payslip.input.type">
        <field name="code">pgh_001</field>
        <field name="name">Vacaciones</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_001_holidays_not_enjoyed_bf" model="hr.salary.rule">
        <field name="name">Vacaciones no disfrutadas</field>
        <field name="sequence" eval="1020"/>
        <field name="code">PGHNOE001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
payment_daily = (contract.wage / 30)
work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
holiday_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))
result = payment_daily * holiday_not_enjoyed
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_001_public_holiday_bf" model="hr.salary.rule">
        <field name="name">Días de Descanso Trabajados</field>
        <field name="sequence" eval="1025"/>
        <field name="code">TDF001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
daily_wage = contract.wage / 30
if worked_days.dict.get('LEAVE140'):
    working_schedule = contract.resource_calendar_id
    attendances = payslip.dict._get_attendances()
    date_from, date_to = payslip.dict._get_dates_on_datetime()

    for leave in working_schedule.global_leave_ids.filtered(lambda leave: date_from &lt;= leave.date_from &lt;= date_to):
        for attendance in attendances.filtered(lambda att: leave.date_from &lt;= att.check_in &lt;= leave.date_to):
            result += daily_wage * 2
result += inputs.tdf_001 and (inputs.tdf_001.amount * daily_wage * 2)
        </field>
    </record>

    <record id="hr_payslip_input_type_perception_001_public_holiday_bf" model="hr.payslip.input.type">
        <field name="code">tdf_001</field>
        <field name="name">Días de Descanso Trabajados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_003_g_bf" model="hr.salary.rule">
        <field name="name">Participación de los Trabajadores en las Utilidades PTU</field>
        <field name="sequence" eval="3001"/>
        <field name="code">PG003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.PTU and (inputs.PTU.amount - PE003)
        </field>
        <field name="note">Sólo 15 UMAs quedan de exento, el excedente es gravado</field>
    </record>
    <record id="hr_payslip_input_type_perception_003_g_bf" model="hr.payslip.input.type">
        <field name="code">PTU</field>
        <field name="name">Participación de los Trabajadores en las Utilidades PTU</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_003_e_bf" model="hr.salary.rule">
        <field name="name">Participación de los Trabajadores en las Utilidades PTU</field>
        <field name="sequence" eval="3000"/>
        <field name="code">PE003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.PTU and inputs.PTU.amount
exempt = contract.company_id.l10n_mx_edi_uma * 15
result = exempt if result &gt;= exempt else result
        </field>
        <field name="note">Sólo 15 UMAs quedan de exento, el excedente es gravado</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_004_e_bf" model="hr.salary.rule">
        <field name="name">Reembolso de Gastos Médicos Dentales y Hospitalarios</field>
        <field name="sequence" eval="4000"/>
        <field name="code">PE004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_004 and inputs.pe_004.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_004_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_04</field>
        <field name="name">Reembolso de Gastos Médicos Dentales y Hospitalarios</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_005_e_bf" model="hr.salary.rule">
        <field name="name">Fondo de Ahorro Empresa</field>
        <field name="sequence" eval="5000"/>
        <field name="code">PE005</field>
        <field name="l10n_mx_edi_code">005</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.pe_005 and inputs.pe_005.amount
if contract.company_id.l10n_mx_edi_percentage_saving_fund:
    result += contract.company_id.l10n_mx_edi_percentage_saving_fund * PG001
        </field>
    </record>
    <record id="hr_payslip_input_type_perception_005_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_005</field>
        <field name="name">Fondo de Ahorro</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_006_e_bf" model="hr.salary.rule">
        <field name="name">Caja de ahorro</field>
        <field name="sequence" eval="6000"/>
        <field name="code">PE006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_006 and inputs.pe_006.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_006_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_006</field>
        <field name="name">Caja de ahorro</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_009_e_bf" model="hr.salary.rule">
        <field name="name">Contribuciones a Cargo del Trabajador Pagadas por el Patrón</field>
        <field name="sequence" eval="9000"/>
        <field name="code">PE009</field>
        <field name="l10n_mx_edi_code">009</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_009 and inputs.pe_009.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_009_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_009</field>
        <field name="name">Contribuciones a Cargo del Trabajador Pagadas por el Patrón</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_010_g_bf" model="hr.salary.rule">
        <field name="name">Premios por puntualidad</field>
        <field name="sequence" eval="10000"/>
        <field name="code">PG010</field>
        <field name="l10n_mx_edi_code">010</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_010 and inputs.pg_010.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_010_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_010</field>
        <field name="name">Premios por puntualidad</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_011_g_bf" model="hr.salary.rule">
        <field name="name">Prima de Seguro de vida</field>
        <field name="sequence" eval="11000"/>
        <field name="code">PG011</field>
        <field name="l10n_mx_edi_code">011</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_011 and inputs.pg_011.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_011_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_011</field>
        <field name="name">Prima de Seguro de vida</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_012_e_bf" model="hr.salary.rule">
        <field name="name">Seguro de Gastos Medicos Mayores</field>
        <field name="sequence" eval="12000"/>
        <field name="code">PE012</field>
        <field name="l10n_mx_edi_code">012</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_012 and inputs.pe_012.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_012_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_012</field>
        <field name="name">Seguro de Gastos Medicos Mayores</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_013_e_bf" model="hr.salary.rule">
        <field name="name">Cuotas Sindicales Pagadas por el Patrón</field>
        <field name="sequence" eval="13000"/>
        <field name="code">PE013</field>
        <field name="l10n_mx_edi_code">013</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_013 and inputs.pe_013.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_013_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_013</field>
        <field name="name">Cuotas Sindicales Pagadas por el Patrón</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_014_e_bf" model="hr.salary.rule">
        <field name="name">Subsidios por incapacidad</field>
        <field name="sequence" eval="14000"/>
        <field name="code">PE014</field>
        <field name="l10n_mx_edi_code">014</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.pe_014 and inputs.pe_014.amount or 0
sick_leave = worked_days.dict.get('LEAVE110') and worked_days.LEAVE110.number_of_days or 0.0
if sick_leave:
    result += payslip.dict._get_inability_bonus()
        </field>
    </record>
    <record id="hr_payslip_input_type_perception_014_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_014</field>
        <field name="name">Subsidios por incapacidad</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_015_e_bf" model="hr.salary.rule">
        <field name="name">Becas para trabajadores o hijos</field>
        <field name="sequence" eval="15000"/>
        <field name="code">PE015</field>
        <field name="l10n_mx_edi_code">015</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_015 and inputs.pe_015.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_015_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_015</field>
        <field name="name">Becas para trabajadores o hijos</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_019_es_bf" model="hr.salary.rule">
        <field name="name">Horas extra simples</field>
        <field name="sequence" eval="19000"/>
        <field name="code">PES019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
sd = contract.wage / 30.4
sdh = sd / 8
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
for week in payslip.dict.get_overtime_data(True).values():
    doubles = week['no_paid']
    amount_exempt = doubles * sdh
    if sd == minimum_wage:
        result += amount_exempt
        continue
    result += min((amount_exempt / 2), contract.company_id.l10n_mx_edi_uma * 5)
        </field>
        <field name="note">Si SD &lt;= SM son 9 hr exentas, pero si SD &gt; SM son 2.5 hr exentas</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_019_gs_bf" model="hr.salary.rule">
        <field name="name">Horas extra simples</field>
        <field name="sequence" eval="19000"/>
        <field name="code">PGS019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
sd = contract.wage / 30.4
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
# Si SD == SM, todas las dobles son exentas
if sd != minimum_wage:
    sdh = sd / 8
    for week in payslip.dict.get_overtime_data(True).values():
        doubles = week['no_paid']
        amount_exempt = doubles * sdh
        if amount_exempt / 2 &gt; contract.company_id.l10n_mx_edi_uma * 5:
            result += (contract.company_id.l10n_mx_edi_uma * 5) - amount_exempt
            continue
        result += amount_exempt / 2
        </field>
        <field name="note">Si SD &lt;= SM son 9 hr exentas, pero si SD &gt; SM son 2.5 hr exentas</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_019_e_bf" model="hr.salary.rule">
        <field name="name">Horas extra dobles</field>
        <field name="sequence" eval="19000"/>
        <field name="code">PE019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
sd = contract.wage / 30.4
sdh = sd / 8 * 2
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
for week in payslip.dict.get_overtime_data().values():
    if week['paid'] &gt;= 9 or not week['no_paid']:
        # Las horas dobles para esta semana ya se pagaron en la nomina anterior
        continue
    doubles = min(week['no_paid'] + week['paid'], 9)
    doubles_paid = week['paid']
    doubles_pp = (doubles - week['paid']) if doubles &gt; week['paid'] else 0
    amount_exempt = doubles_pp * sdh
    if sd == minimum_wage:
        result += amount_exempt
        continue
    result += min((amount_exempt / 2), contract.company_id.l10n_mx_edi_uma * 5)
        </field>
        <field name="note">Si SD &lt;= SM son 9 hr exentas, pero si SD &gt; SM son 2.5 hr exentas</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_019_g_bf" model="hr.salary.rule">
        <field name="name">Horas extra dobles</field>
        <field name="sequence" eval="19000"/>
        <field name="code">PG019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
sd = contract.wage / 30.4
# Debe ser el SM general, por eso se utiliza el de la compañía
minimum_wage = contract.company_id.l10n_mx_edi_minimum_wage
# Si SD == SM, todas las dobles son exentas
if sd != minimum_wage:
    sdh = sd / 8 * 2
    for week in payslip.dict.get_overtime_data().values():
        if week['paid'] &gt;= 9 or not week['no_paid']:
            # Las horas dobles para esta semana ya se pagaron en la nomina anterior
            continue
        doubles = min(week['no_paid'] + week['paid'], 9)
        doubles_paid = week['paid']
        doubles_pp = (doubles - week['paid']) if doubles &gt; week['paid'] else 0
        amount_exempt = doubles_pp * sdh
        if amount_exempt / 2 &gt; contract.company_id.l10n_mx_edi_uma * 5:
            result += (contract.company_id.l10n_mx_edi_uma * 5) - amount_exempt
            continue
        result += amount_exempt / 2
        </field>
        <field name="note">Si SD &lt;= SM son 9 hr exentas, pero si SD &gt; SM son 2.5 hr exentas</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_019_t_bf" model="hr.salary.rule">
        <field name="name">Horas extra triples</field>
        <field name="sequence" eval="19001"/>
        <field name="code">PGT019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
sd = contract.wage / 30.4
sdh = sd / 8 * 3
for week in payslip.dict.get_overtime_data().values():
    total = week['paid'] + week['no_paid']
    if total &lt;= 9:
        continue
    hours_tp = total - (9 if week['paid'] &lt;= 9 else week['paid'])
    result += hours_tp * sdh
        </field>
        <field name="note">El excedente de 9 horas por semana, es grabado</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_020_e_bf" model="hr.salary.rule">
        <field name="name">Prima dominical</field>
        <field name="sequence" eval="20000"/>
        <field name="code">PE020</field>
        <field name="l10n_mx_edi_code">020</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
# Get How many sundays there is with an attendece
attended_days = payslip.dict._get_attendances_weekdays()
sundays_count = inputs.p_020.amount if inputs.p_020 else 0
sundays_count += attended_days.count(6)
sundays_payment = contract.wage / 30.0 * 0.25 * sundays_count
exempt = contract.company_id.l10n_mx_edi_uma * sundays_count

result = exempt if exempt &lt; sundays_payment else sundays_payment
        </field>
        <field name="note">Sólo 1 UMA por cada domingo trabajado es exento, el excedente es gravado. Por favor, instale el módulo de Asistencias para utilizar esta regla.</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_020_g_bf" model="hr.salary.rule">
        <field name="name">Prima dominical</field>
        <field name="sequence" eval="20000"/>
        <field name="code">PG020</field>
        <field name="l10n_mx_edi_code">020</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0

# Get How many sundays there is with an attendece
attended_days = payslip.dict._get_attendances_weekdays()
sundays_count = inputs.p_020.amount if inputs.p_020 else 0
sundays_count += attended_days.count(6)
sundays_payment = contract.wage / 30.0 * 0.25 * sundays_count
exempt = contract.company_id.l10n_mx_edi_uma * sundays_count

result = sundays_payment - exempt if sundays_payment &gt; exempt else 0
        </field>
        <field name="note">Sólo 1 UMA por cada domingo trabajado es exento, el excedente es gravado. Por favor, instale el módulo de Asistencias para utilizar esta regla.</field>
    </record>
    <record id="hr_payslip_input_type_perception_020_bf" model="hr.payslip.input.type">
        <field name="code">p_020</field>
        <field name="name">Domingos trabajados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_021_e_bf" model="hr.salary.rule">
        <field name="name">Prima vacacional</field>
        <field name="sequence" eval="21000"/>
        <field name="code">PE021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus = payslip.company_id.l10n_mx_edi_vacation_bonus
result = holidays = 0
if not vacation_bonus or vacation_bonus == 'on_holidays':
    holidays = worked_days.dict.get('LEAVE120') and worked_days.LEAVE120.number_of_days or 0.0
elif vacation_bonus == 'on_anniversary' and payslip.date_from.month == contract.date_start.month and payslip.date_from.year != contract.date_start.year and payslip.date_from.day &lt;= contract.date_start.day &lt;= payslip.date_to.day:
    holidays = contract.l10n_mx_edi_holidays
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * holidays * contract.l10n_mx_edi_vacation_bonus / 100
    result = uma * 15 if result >= (uma * 15) else result
        </field>
        <field name="note">Sólo 15 dias de SM son exentos, el excedente es gravado</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_021_g_bf" model="hr.salary.rule">
        <field name="name">Prima vacacional</field>
        <field name="sequence" eval="21000"/>
        <field name="code">PG021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
vacation_bonus = payslip.company_id.l10n_mx_edi_vacation_bonus
result = holidays = 0
if not vacation_bonus or vacation_bonus == 'on_holidays':
    holidays = worked_days.dict.get('LEAVE120') and worked_days.LEAVE120.number_of_days or 0.0
elif vacation_bonus == 'on_anniversary' and payslip.date_from.month == contract.date_start.month and payslip.date_from.year != contract.date_start.year and payslip.date_from.day &lt;= contract.date_start.day &lt;= payslip.date_to.day:
    holidays = contract.l10n_mx_edi_holidays
if holidays:
    daily_wage = contract.wage / 30
    uma = contract.company_id.l10n_mx_edi_uma
    result = daily_wage * holidays * contract.l10n_mx_edi_vacation_bonus / 100
    result = result - uma * 15 if result >= uma * 15 else 0
        </field>
        <field name="note">Sólo 15 dias de SM son exentos, el excedente es gravado</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_024_e_bf" model="hr.salary.rule">
        <field name="name">Seguro de retiro</field>
        <field name="sequence" eval="24000"/>
        <field name="code">PE024</field>
        <field name="l10n_mx_edi_code">024</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_024 and inputs.pe_024.amount</field>
        <field name="note">Sólo 90 SM por año trabajado es exento, el excedente es gravado</field>
    </record>
    <record id="hr_payslip_input_type_perception_024_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_024</field>
        <field name="name">Seguro de retiro</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_024_g_bf" model="hr.salary.rule">
        <field name="name">Seguro de retiro</field>
        <field name="sequence" eval="24000"/>
        <field name="code">PG024</field>
        <field name="l10n_mx_edi_code">024</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_024 and inputs.pg_024.amount</field>
        <field name="note">Sólo 90 SM por año trabajado es exento, el excedente es gravado</field>
    </record>
    <record id="hr_payslip_input_type_perception_024_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_024</field>
        <field name="name">Seguro de retiro</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_026_e_bf" model="hr.salary.rule">
        <field name="name">Reembolso por funeral</field>
        <field name="sequence" eval="26000"/>
        <field name="code">PE026</field>
        <field name="l10n_mx_edi_code">026</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_026 and inputs.pe_026.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_026_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_026</field>
        <field name="name">Reembolso por funeral</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_027_e_bf" model="hr.salary.rule">
        <field name="name">Cuotas de seguridad social pagadas por el patrón</field>
        <field name="sequence" eval="27000"/>
        <field name="code">PE027</field>
        <field name="l10n_mx_edi_code">027</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_027 and inputs.pe_027.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_027_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_027</field>
        <field name="name">Cuotas de seguridad social pagadas por el patrón</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_028_g_bf" model="hr.salary.rule">
        <field name="name">Comisiones</field>
        <field name="sequence" eval="28000"/>
        <field name="code">PG028</field>
        <field name="l10n_mx_edi_code">028</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_028 and inputs.pg_028.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_028_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_028</field>
        <field name="name">Comisiones</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_029_e_bf" model="hr.salary.rule">
        <field name="name">Vales de despensa</field>
        <field name="sequence" eval="29000"/>
        <field name="code">PE029</field>
        <field name="l10n_mx_edi_code">029</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.p_029 and inputs.p_029.amount
minimum_wage = employee.l10n_mx_edi_employer_registration_id.minimum_wage or contract.company_id.l10n_mx_edi_minimum_wage
holidays = worked_days.dict.get('LEAVE120') and worked_days.LEAVE120.number_of_days or 0.0
result += contract.l10n_mx_edi_food_voucher
if contract.l10n_mx_edi_schedule_pay == '02':
    if holidays:
        hours_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_hours or 0.0
        result = result / sum([line.hour_to - line.hour_from for line in contract.resource_calendar_id.attendance_ids]) * hours_work
elif contract.l10n_mx_edi_schedule_pay == '04':
    ausencias = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0
    out_of_contract = worked_days.dict.get('OUT') and worked_days.OUT.number_of_days or 0
    result = result / 15 * (15 - holidays - ausencias - out_of_contract)
elif contract.l10n_mx_edi_schedule_pay == '05':
    ausencias = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0
    out_of_contract = worked_days.dict.get('OUT') and worked_days.OUT.number_of_days or 0
    result = result / 30 * (30 - holidays - ausencias - out_of_contract)
result = minimum_wage * 7 if result >= (minimum_wage * 7) else result
        </field>
        <field name="note">Sólo mediante monedero del SAT son 7 SM elevado al año como importe exento, el excedente es gravado</field>
    </record>
    <record id="hr_payslip_input_type_perception_029_e_bf" model="hr.payslip.input.type">
        <field name="code">p_029</field>
        <field name="name">Vales de despensa</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_029_g_bf" model="hr.salary.rule">
        <field name="name">Vales de despensa</field>
        <field name="sequence" eval="29000"/>
        <field name="code">PG029</field>
        <field name="l10n_mx_edi_code">029</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.p_029 and inputs.p_029.amount
minimum_wage = employee.l10n_mx_edi_employer_registration_id.minimum_wage or contract.company_id.l10n_mx_edi_minimum_wage
result += contract.l10n_mx_edi_food_voucher
holidays = worked_days.dict.get('LEAVE120') and worked_days.LEAVE120.number_of_days or 0.0
if contract.l10n_mx_edi_schedule_pay == '02':
    if holidays:
        hours_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_hours or 0.0
        result = result / sum([line.hour_to - line.hour_from for line in contract.resource_calendar_id.attendance_ids]) * hours_work
elif contract.l10n_mx_edi_schedule_pay == '04':
    ausencias = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0
    out_of_contract = worked_days.dict.get('OUT') and worked_days.OUT.number_of_days or 0
    result = result / 15 * (15 - holidays - ausencias - out_of_contract)
elif contract.l10n_mx_edi_schedule_pay == '05':
    ausencias = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0
    out_of_contract = worked_days.dict.get('OUT') and worked_days.OUT.number_of_days or 0
    result = result / 30 * (30 - holidays - ausencias - out_of_contract)
result = result - minimum_wage * 7 if result >= minimum_wage * 7 else 0
        </field>
        <field name="note">Sólo mediante monedero del SAT son 7 SM elevado al año como importe exento, el excedente es gravado</field>
    </record>
    <record id="hr_payslip_input_type_perception_029_g_bf" model="hr.payslip.input.type">
        <field name="code">p_029</field>
        <field name="name">Vales de despensa</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_030_g_bf" model="hr.salary.rule">
        <field name="name">Vales de restaurante</field>
        <field name="sequence" eval="30000"/>
        <field name="code">PG030</field>
        <field name="l10n_mx_edi_code">030</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_030 and inputs.pg_030.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_030_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_030</field>
        <field name="name">Vales de restaurante</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_031_e_bf" model="hr.salary.rule">
        <field name="name">Vales de gasolina</field>
        <field name="sequence" eval="31000"/>
        <field name="code">PE031</field>
        <field name="l10n_mx_edi_code">031</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_031 and inputs.pe_031.amount</field>
        <field name="note">Sólo si están a nombre de la dependencia</field>
    </record>
    <record id="hr_payslip_input_type_perception_031_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_031</field>
        <field name="name">Vales de gasolina</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_031_g_bf" model="hr.salary.rule">
        <field name="name">Vales de gasolina</field>
        <field name="sequence" eval="31000"/>
        <field name="code">PG031</field>
        <field name="l10n_mx_edi_code">031</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_031 and inputs.pg_031.amount</field>
        <field name="note">Sólo si están a nombre de la dependencia</field>
    </record>
    <record id="hr_payslip_input_type_perception_031_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_031</field>
        <field name="name">Vales de gasolina</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_032_g_bf" model="hr.salary.rule">
        <field name="name">Vales de ropa</field>
        <field name="sequence" eval="32000"/>
        <field name="code">PG032</field>
        <field name="l10n_mx_edi_code">032</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_032 and inputs.pg_032.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_032_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_032</field>
        <field name="name">Vales de ropa</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_033_g_bf" model="hr.salary.rule">
        <field name="name">Ayuda para renta</field>
        <field name="sequence" eval="33000"/>
        <field name="code">PG033</field>
        <field name="l10n_mx_edi_code">033</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_033 and inputs.pg_033.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_033_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_033</field>
        <field name="name">Ayuda para renta</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_034_g_bf" model="hr.salary.rule">
        <field name="name">Ayuda para artículos escolares</field>
        <field name="sequence" eval="34000"/>
        <field name="code">PG034</field>
        <field name="l10n_mx_edi_code">034</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_034 and inputs.pg_034.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_034_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_034</field>
        <field name="name">Ayuda para artículos escolares</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_035_g_bf" model="hr.salary.rule">
        <field name="name">Ayuda para anteojos</field>
        <field name="sequence" eval="35000"/>
        <field name="code">PG035</field>
        <field name="l10n_mx_edi_code">035</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_035 and inputs.pg_035.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_035_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_035</field>
        <field name="name">Ayuda Anteojos</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_036_e_bf" model="hr.salary.rule">
        <field name="name">Ayuda para transporte</field>
        <field name="sequence" eval="36000"/>
        <field name="code">PE036</field>
        <field name="l10n_mx_edi_code">036</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_036 and inputs.pe_036.amount</field>
        <field name="note">Si es vehículo de la empresa se exenta</field>
    </record>
    <record id="hr_payslip_input_type_perception_036_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_036</field>
        <field name="name">Ayuda para transporte</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_036_g_bf" model="hr.salary.rule">
        <field name="name">Ayuda para transporte</field>
        <field name="sequence" eval="36000"/>
        <field name="code">PG036</field>
        <field name="l10n_mx_edi_code">036</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_036 and inputs.pg_036.amount</field>
        <field name="note">Si es vehículo de la empresa se exenta</field>
    </record>
    <record id="hr_payslip_input_type_perception_036_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_036</field>
        <field name="name">Ayuda para transporte</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_037_e_bf" model="hr.salary.rule">
        <field name="name">Ayuda para gastos de funeral</field>
        <field name="sequence" eval="37000"/>
        <field name="code">PE037</field>
        <field name="l10n_mx_edi_code">037</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_037 and inputs.pe_037.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_037_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_037</field>
        <field name="name">Ayuda para gastos de funeral</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_038_e_bf" model="hr.salary.rule">
        <field name="name">Otros ingresos por salarios</field>
        <field name="sequence" eval="38000"/>
        <field name="code">PE038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_038 and inputs.pe_038.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_038_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_038</field>
        <field name="name">Otros ingresos por salarios</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_038_g_bf" model="hr.salary.rule">
        <field name="name">Otros ingresos por salarios</field>
        <field name="sequence" eval="38000"/>
        <field name="code">PG038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_038 and inputs.pg_038.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_038_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_038</field>
        <field name="name">Otros ingresos por salarios</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_productivity_g_bf" model="hr.salary.rule">
        <field name="name">Premios eficiencia</field>
        <field name="sequence" eval="38010"/>
        <field name="code">PG1038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.pgpe_038 and inputs.pgpe_038.amount
if not worked_days.dict.get('LEAVE90') and payslip.dict.payslip_run_id.l10n_mx_edi_productivity_bonus:
    slips = payslip.payslip_run_id.slip_ids.filtered(lambda sl: 'LEAVE90' not in sl.worked_days_line_ids.mapped('code'))
    result += payslip.payslip_run_id.l10n_mx_edi_productivity_bonus / len(slips)
        </field>
    </record>
    <record id="hr_rule_input_perception_productivity_038_g_bf" model="hr.payslip.input.type">
        <field name="code">pgpe_038</field>
        <field name="name">Premios eficiencia</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_attendance_bonus_g_bf" model="hr.salary.rule">
        <field name="name">Premio de Asistencia</field>
        <field name="sequence" eval="38020"/>
        <field name="code">PGA038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
absence = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or False
if not absence:
    result = contract.l10n_mx_edi_attendance_bonus
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_punctuality_bonus_g_bf" model="hr.salary.rule">
        <field name="name">Premio de Puntualidad</field>
        <field name="sequence" eval="38030"/>
        <field name="code">PGP038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
absence = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or False
delay = True if worked_days.dict.get('RETARDO') else False
if not absence and not delay:
    result = contract.l10n_mx_edi_punctuality_bonus
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_seventh_day_g_bf" model="hr.salary.rule">
        <field name="name">Séptimo dia</field>
        <field name="sequence" eval="38040"/>
        <field name="code">SD038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
daily_payment = contract.wage / 30.0
# get which days employee works
working_days = employee.resource_calendar_id.attendance_ids.mapped('dayofweek')
attended_days = payslip.dict._get_attendances_weekdays()

result = (daily_payment * 2) * inputs.p_020.amount if inputs.p_020 else 0

for day in attended_days:
    # Casting day, contract.l10n_mx_edi_day_off is a string weekday
    day = str(day)

    if contract.l10n_mx_edi_day_off:
        if day == contract.l10n_mx_edi_day_off:
            result += (daily_payment * 2) if day == '6' else daily_payment

    elif not day in working_days:
        result += (daily_payment * 2) if day == '6' else daily_payment
        </field>
        <field name="note">Por favor, instale el módulo de Asistencias para utilizar esta regla.</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_039_e_bf" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro</field>
        <field name="sequence" eval="39000"/>
        <field name="code">PE039</field>
        <field name="l10n_mx_edi_code">039</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_039 and inputs.pe_039.amount</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>
    <record id="hr_payslip_input_type_perception_039_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_039</field>
        <field name="name">Jubilaciones, pensiones o haberes de retiro</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_039_g_bf" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro</field>
        <field name="sequence" eval="39000"/>
        <field name="code">PG039</field>
        <field name="l10n_mx_edi_code">039</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_039 and inputs.pg_039.amount</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>
    <record id="hr_payslip_input_type_perception_039_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_039</field>
        <field name="name">Jubilaciones, pensiones o haberes de retiro</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_044_e_bf" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro en parcialidades</field>
        <field name="sequence" eval="44000"/>
        <field name="code">PE044</field>
        <field name="l10n_mx_edi_code">044</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_044 and inputs.pe_044.amount</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>
    <record id="hr_payslip_input_type_perception_044_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_044</field>
        <field name="name">Jubilaciones, pensiones o haberes de retiro en parcialidades</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_044_g_bf" model="hr.salary.rule">
        <field name="name">Jubilaciones, pensiones o haberes de retiro en parcialidades</field>
        <field name="sequence" eval="44000"/>
        <field name="code">PG044</field>
        <field name="l10n_mx_edi_code">044</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_044 and inputs.pg_044.amount</field>
        <field name="note">Sólo 15 SM son exentos, el excedente es gravado.</field>
    </record>
    <record id="hr_payslip_input_type_perception_044_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_044</field>
        <field name="name">Jubilaciones, pensiones o haberes de retiro en parcialidades</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_045_e_bf" model="hr.salary.rule">
        <field name="name">Ingresos en acciones o títulos valor que representan bienes</field>
        <field name="sequence" eval="45000"/>
        <field name="code">PE045</field>
        <field name="l10n_mx_edi_code">045</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_045 and inputs.pe_045.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_045_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_045</field>
        <field name="name">Ingresos en acciones o títulos valor que representan bienes</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_045_g_bf" model="hr.salary.rule">
        <field name="name">Ingresos en acciones o títulos valor que representan bienes</field>
        <field name="sequence" eval="45000"/>
        <field name="code">PG045</field>
        <field name="l10n_mx_edi_code">045</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_045 and inputs.pg_045.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_045_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_045</field>
        <field name="name">Ingresos en acciones o títulos valor que representan bienes</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_046_g_bf" model="hr.salary.rule">
        <field name="name">Ingresos asimilados a salarios</field>
        <field name="sequence" eval="46000"/>
        <field name="code">PG046</field>
        <field name="l10n_mx_edi_code">046</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if employee.l10n_mx_edi_is_assimilated:
    # In case commission or raised price
    payment_daily = (contract.wage / 30)
    holidays = worked_days.dict.get('HOLIDAYS') and worked_days.HOLIDAYS.number_of_days or 0.0
    if contract.l10n_mx_edi_schedule_pay ==  '01':
        result = payment_daily - holidays
    elif contract.l10n_mx_edi_schedule_pay ==  '02':
        result = payment_daily * (7 - holidays)
    elif contract.l10n_mx_edi_schedule_pay == '03':
        result = payment_daily * (14 - holidays)
    elif contract.l10n_mx_edi_schedule_pay == '04':
        result = payment_daily * (15 - holidays)
    elif contract.l10n_mx_edi_schedule_pay == '05':
        result = payment_daily * (30 - holidays)
    elif contract.l10n_mx_edi_schedule_pay == '06':
        result = payment_daily * (60 - holidays)
    elif contract.l10n_mx_edi_schedule_pay == '10':
        result = payment_daily * (10 - holidays)
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_047_e_bf" model="hr.salary.rule">
        <field name="name">Alimentación</field>
        <field name="sequence" eval="47000"/>
        <field name="code">PE047</field>
        <field name="l10n_mx_edi_code">047</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_047 and inputs.pe_047.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_047_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_047</field>
        <field name="name">Alimentación</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_047_g_bf" model="hr.salary.rule">
        <field name="name">Alimentación</field>
        <field name="sequence" eval="47000"/>
        <field name="code">PG047</field>
        <field name="l10n_mx_edi_code">047</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_047 and inputs.pg_047.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_047_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_047</field>
        <field name="name">Alimentación</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_048_e_bf" model="hr.salary.rule">
        <field name="name">Habitación</field>
        <field name="sequence" eval="48000"/>
        <field name="code">PE048</field>
        <field name="l10n_mx_edi_code">048</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_048 and inputs.pe_048.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_048_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_048</field>
        <field name="name">Habitación</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_048_g_bf" model="hr.salary.rule">
        <field name="name">Habitación</field>
        <field name="sequence" eval="48000"/>
        <field name="code">PG048</field>
        <field name="l10n_mx_edi_code">048</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_048 and inputs.pg_048.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_048_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_048</field>
        <field name="name">Habitación</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_049_g_bf" model="hr.salary.rule">
        <field name="name">Premios por asistencia</field>
        <field name="sequence" eval="49000"/>
        <field name="code">PG049</field>
        <field name="l10n_mx_edi_code">049</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_049 and inputs.pg_049.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_049_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_049</field>
        <field name="name">Premios por asistencia</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_050_e_bf" model="hr.salary.rule">
        <field name="name">Viáticos</field>
        <field name="sequence" eval="50000"/>
        <field name="code">PE050</field>
        <field name="l10n_mx_edi_code">050</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pe_050 and inputs.pe_050.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_050_e_bf" model="hr.payslip.input.type">
        <field name="code">pe_050</field>
        <field name="name">Viáticos</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_050_g_bf" model="hr.salary.rule">
        <field name="name">Viáticos</field>
        <field name="sequence" eval="50000"/>
        <field name="code">PG050</field>
        <field name="l10n_mx_edi_code">050</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_050 and inputs.pg_050.amount</field>
    </record>
    <record id="hr_payslip_input_type_perception_050_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_050</field>
        <field name="name">Viáticos</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_051_g_bf" model="hr.salary.rule">
        <field name="name">Pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades</field>
        <field name="sequence" eval="51000"/>
        <field name="code">PG051</field>
        <field name="l10n_mx_edi_code">051</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_051 and inputs.pg_051.amount</field>
    </record>
    <record id="hr_rule_input_perception_051_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_051</field>
        <field name="name">Pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_052_g_bf" model="hr.salary.rule">
        <field name="name">Pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de resoluciones judicial o de un laudo</field>
        <field name="sequence" eval="52000"/>
        <field name="code">PG052</field>
        <field name="l10n_mx_edi_code">052</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_052 and inputs.pg_052.amount</field>
    </record>
    <record id="hr_rule_input_perception_052_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_052</field>
        <field name="name">Pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de resoluciones judicial o de un laudo</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_053_g_bf" model="hr.salary.rule">
        <field name="name">Pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de resoluciones judicial o de un laudo</field>
        <field name="sequence" eval="53000"/>
        <field name="code">PG053</field>
        <field name="l10n_mx_edi_code">053</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.pg_053 and inputs.pg_053.amount</field>
    </record>
    <record id="hr_rule_input_perception_053_g_bf" model="hr.payslip.input.type">
        <field name="code">pg_053</field>
        <field name="name">Pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de resoluciones judicial o de un laudo</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <!-- Deductions -->
    <record id="hr_rule_l10n_mx_payroll_deduction_001_bf" model="hr.salary.rule">
        <field name="name">Seguridad social</field>
        <field name="sequence" eval="54000"/>
        <field name="code">SS001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    sbc = contract.l10n_mx_edi_sdi_total
    uma = contract.company_id.l10n_mx_edi_uma
    days_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE140') and worked_days.LEAVE140.number_of_days or 0.0
    # Generic Time Off
    days_work += worked_days.dict.get('LEAVE100') and worked_days.LEAVE100.number_of_days or 0.0
    work_entry = payslip.env['hr.work.entry'].search(contract._get_work_hours_domain(payslip.date_from, payslip.date_to, domain=[], inside=True))
    holiday_days_not_enjoyed = sum(work_entry.leave_id.filtered('l10n_mx_edi_payslip_no_enjoy_days').mapped('number_of_days'))
    days_work += holiday_days_not_enjoyed
    leaves = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0.0
    specie_excess = ((sbc - (uma * 3)) * 0.004 * (days_work + leaves)) if (sbc - (uma * 3)) &gt; 0 else 0
    benefits = 0.0025 * sbc * (days_work + leaves)
    pensioners = 0.00375 * sbc * (days_work + leaves)
    disability = 0.00625 * sbc * days_work
    unemployment = 0.01125 * sbc * days_work
    result = specie_excess + benefits + pensioners + disability + unemployment
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_003_bf" model="hr.salary.rule">
        <field name="name">Aportaciones a retiro, cesantía en edad avanzada y vejez</field>
        <field name="sequence" eval="56000"/>
        <field name="code">003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_003 and inputs.d_003.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_003_bf" model="hr.payslip.input.type">
        <field name="code">d_003</field>
        <field name="name">Aportaciones a retiro, cesantía en edad avanzada y vejez</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_004_bf" model="hr.salary.rule">
        <field name="name">Otros</field>
        <field name="sequence" eval="57000"/>
        <field name="code">004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_004 and inputs.d_004.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_004_bf" model="hr.payslip.input.type">
        <field name="code">d_004</field>
        <field name="name">Otros</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_004_faemp_bf" model="hr.salary.rule">
        <field name="name">Fondo de Ahorro Empleado</field>
        <field name="sequence" eval="57004"/>
        <field name="code">FAE</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = PE005
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_004_facomp_bf" model="hr.salary.rule">
        <field name="name">Fondo de Ahorro Empresa</field>
        <field name="sequence" eval="57004"/>
        <field name="code">FAC</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = PE005
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_004_internal_discount_bf" model="hr.salary.rule">
        <field name="name">Descuento Interno</field>
        <field name="sequence" eval="57001"/>
        <field name="code">DI004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
for loan in employee.get_current_loans('internal', payslip.date_from, payslip.date_to):
    payment_daily = (loan.monthly_withhold / 30)
    if contract.l10n_mx_edi_schedule_pay ==  '01':
        result += payment_daily
    elif contract.l10n_mx_edi_schedule_pay ==  '02':
        result += payment_daily * 7
    elif contract.l10n_mx_edi_schedule_pay == '03':
        result += payment_daily * 14
    elif contract.l10n_mx_edi_schedule_pay == '04':
        result += payment_daily * 15
    elif contract.l10n_mx_edi_schedule_pay == '05':
        result += contract.wage
    elif contract.l10n_mx_edi_schedule_pay == '06':
        result += contract.wage * 2
    elif contract.l10n_mx_edi_schedule_pay == '10':
        result += contract.wage * 10
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_005_bf" model="hr.salary.rule">
        <field name="name">Aportaciones a Fondo de vivienda</field>
        <field name="sequence" eval="58000"/>
        <field name="code">005</field>
        <field name="l10n_mx_edi_code">005</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_005 and inputs.d_005.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_005_bf" model="hr.payslip.input.type">
        <field name="code">d_005</field>
        <field name="name">Aportaciones a Fondo de vivienda</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_006_bf" model="hr.salary.rule">
        <field name="name">Incapacidad Enfermedad General</field>
        <field name="sequence" eval="59000"/>
        <field name="code">IEG006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# 3 días son pagados al 100, el resto como subsidio
result = 0
if worked_days.dict.get('LEAVE110'):
    payment_daily = (contract.wage / 30)
    sick_leave = payslip.dict._get_full_leaves('LEAVE110')
    sick_leave = (sick_leave - payslip.dict._get_inability_bonus(True)) if sick_leave > 3 else 0
    result = sick_leave * payment_daily
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_006_im_bf" model="hr.salary.rule">
        <field name="name">Incapacidad Maternidad</field>
        <field name="sequence" eval="59002"/>
        <field name="code">IM006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if worked_days.dict.get('LEAVE111'):
    payment_daily = (contract.wage / 30)
    sick_leave = payslip.dict._get_full_leaves('LEAVE111')
    result = sick_leave * payment_daily
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_006_irt_bf" model="hr.salary.rule">
        <field name="name">Incapacidad Riesgo de Trabajo</field>
        <field name="sequence" eval="59001"/>
        <field name="code">IRT006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if worked_days.dict.get('LEAVE112'):
    payment_daily = (contract.wage / 30)
    sick_leave = payslip.dict._get_full_leaves('LEAVE112')
    result = sick_leave * payment_daily
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_006_lphc_bf" model="hr.salary.rule">
        <field name="name">Licencia para Padres con Hijos con Cancer</field>
        <field name="sequence" eval="59003"/>
        <field name="code">LPHC006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if worked_days.dict.get('LEAVE113'):
    payment_daily = (contract.wage / 30)
    sick_leave = payslip.dict._get_full_leaves('LEAVE113')
    result = sick_leave * payment_daily
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_007_bf" model="hr.salary.rule">
        <field name="name">Pensión alimenticia</field>
        <field name="sequence" eval="600000"/>
        <field name="code">007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony:
    alimony = alimony[0]
    if alimony.discount_type == 'percentage_wage':
        result += PG001 * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories.PERGRA + categories.PEREXE - ISR002 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories.PERGRA + categories.PEREXE + categories.OTHER - categories.DEDUC) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        # TODO -  FONDO DE GARANTIA HIPOTECARIA, PRESTAMO HIPOTECARIO
        result += (categories.PERGRA + categories.PEREXE - ISR002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories.PERGRA + categories.PEREXE) * alimony.discount_amount / 100
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_007_b_bf" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 2</field>
        <field name="sequence" eval="600001"/>
        <field name="code">B007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 1:
    alimony = alimony[1]
    if alimony.discount_type == 'percentage_wage':
        result += PG001 * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories.PERGRA + categories.PEREXE - ISR002 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories.PERGRA + categories.PEREXE + categories.OTHER - categories.DEDUC) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        # TODO -  FONDO DE GARANTIA HIPOTECARIA, PRESTAMO HIPOTECARIO
        result += (categories.PERGRA + categories.PEREXE - ISR002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories.PERGRA + categories.PEREXE) * alimony.discount_amount / 100
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_007_c_bf" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 3</field>
        <field name="sequence" eval="600003"/>
        <field name="code">C007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 2:
    alimony = alimony[2]
    if alimony.discount_type == 'percentage_wage':
        result += PG001 * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories.PERGRA + categories.PEREXE - ISR002 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories.PERGRA + categories.PEREXE + categories.OTHER - categories.DEDUC) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        # TODO -  FONDO DE GARANTIA HIPOTECARIA, PRESTAMO HIPOTECARIO
        result += (categories.PERGRA + categories.PEREXE - ISR002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories.PERGRA + categories.PEREXE) * alimony.discount_amount / 100
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_007_d_bf" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 4</field>
        <field name="sequence" eval="600004"/>
        <field name="code">D007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 3:
    alimony = alimony[3]
    if alimony.discount_type == 'percentage_wage':
        result += PG001 * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories.PERGRA + categories.PEREXE - ISR002 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories.PERGRA + categories.PEREXE + categories.OTHER - categories.DEDUC) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        # TODO -  FONDO DE GARANTIA HIPOTECARIA, PRESTAMO HIPOTECARIO
        result += (categories.PERGRA + categories.PEREXE - ISR002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories.PERGRA + categories.PEREXE) * alimony.discount_amount / 100
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_007_e_bf" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 5</field>
        <field name="sequence" eval="600005"/>
        <field name="code">E007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 4:
    alimony = alimony[4]
    if alimony.discount_type == 'percentage_wage':
        result += PG001 * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories.PERGRA + categories.PEREXE - ISR002 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories.PERGRA + categories.PEREXE + categories.OTHER - categories.DEDUC) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        # TODO -  FONDO DE GARANTIA HIPOTECARIA, PRESTAMO HIPOTECARIO
        result += (categories.PERGRA + categories.PEREXE - ISR002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories.PERGRA + categories.PEREXE) * alimony.discount_amount / 100
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_007_f_bf" model="hr.salary.rule">
        <field name="name">Pensión alimenticia 6</field>
        <field name="sequence" eval="600006"/>
        <field name="code">F007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
alimony = employee.l10n_mx_edi_alimony_ids.filtered(lambda a: a.date_from &lt;= payslip.date_from and (not a.date_to or a.date_to and a.date_to &gt;= payslip.date_to))
if alimony and len(alimony) &gt; 5:
    alimony = alimony[5]
    if alimony.discount_type == 'percentage_wage':
        result += PG001 * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR':
        result += (categories.PERGRA + categories.PEREXE - ISR002 - SS001) * alimony.discount_amount / 100
    elif alimony.discount_type == 'amount_fixed':
        result += alimony.discount_amount
    elif alimony.discount_type == 'percentage_over_net':
        result += (categories.PERGRA + categories.PEREXE + categories.OTHER - categories.DEDUC) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions_ISR_mortgages':
        # TODO -  FONDO DE GARANTIA HIPOTECARIA, PRESTAMO HIPOTECARIO
        result += (categories.PERGRA + categories.PEREXE - ISR002) * alimony.discount_amount / 100
    elif alimony.discount_type == 'percentage_perceptions':
        result += (categories.PERGRA + categories.PEREXE) * alimony.discount_amount / 100
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_008_bf" model="hr.salary.rule">
        <field name="name">Renta</field>
        <field name="sequence" eval="61000"/>
        <field name="code">008</field>
        <field name="l10n_mx_edi_code">008</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_008 and inputs.d_008.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_008_bf" model="hr.payslip.input.type">
        <field name="code">d_008</field>
        <field name="name">Renta</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_009_bf" model="hr.salary.rule">
        <field name="name">Préstamos provenientes del Fondo Nacional de la Vivienda para los Trabajadores</field>
        <field name="sequence" eval="62000"/>
        <field name="code">009</field>
        <field name="l10n_mx_edi_code">009</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_009 and inputs.d_009.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_009_bf" model="hr.payslip.input.type">
        <field name="code">d_009</field>
        <field name="name">Préstamos provenientes del Fondo Nacional de la Vivienda para los Trabajadores</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_010_bf" model="hr.salary.rule">
        <field name="name">Pago por crédito de vivienda</field>
        <field name="sequence" eval="63000"/>
        <field name="code">010</field>
        <field name="l10n_mx_edi_code">010</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
days_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_days or 0.0
days_work += worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0.0
days_work += worked_days.dict.get('LEAVE140') and worked_days. LEAVE140.number_of_days or 0.0
date = payslip.date_from
leap_year = True if date.year % 4 == 0 and date.year % 100 != 0 or date.year % 400 == 0 else False
period = {0: 59 if not leap_year else 60, 1: 59 if not leap_year else 60, 6: 62, 7: 62}
for loan in employee.get_current_loans('infonavit', payslip.date_from, payslip.date_to):
    if loan.infonavit_type == 'percentage':
        result  = contract.l10n_mx_edi_integrated_salary * (loan.monthly_withhold / 100) * days_work
        continue
    elif loan.infonavit_type == 'vsm' and days_work:
        result = ((contract.company_id.l10n_mx_edi_umi * loan.monthly_withhold) * 2 / period.get(date.month, 61)) * days_work
        continue
    elif loan.infonavit_type == 'fixed_amount':
        result = loan.monthly_withhold * 2 / period.get(date.month, 61) * days_work
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_scv010_bf" model="hr.salary.rule">
        <field name="name">Seguro vivienda infonavit</field>
        <field name="sequence" eval="63001"/>
        <field name="code">SCV010</field>
        <field name="l10n_mx_edi_code">010</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
days = 1
if contract.l10n_mx_edi_schedule_pay == '02':
    days = 7
elif contract.l10n_mx_edi_schedule_pay == '03':
    days = 14
elif contract.l10n_mx_edi_schedule_pay == '04':
    days = 15
elif contract.l10n_mx_edi_schedule_pay == '10':
    days = 10
for loan in employee.get_current_loans('infonavit', payslip.date_from, payslip.date_to):
    if (payslip.date_from.month in [1, 3, 5, 7, 9, 11] and payslip.date_from.day &lt;= days) or loan.date_from and (loan.date_from &gt;= payslip.date_from and loan.date_from &lt;= payslip.date_to):
        result += 15
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_011_bf" model="hr.salary.rule">
        <field name="name">Pago de abonos INFONACOT</field>
        <field name="sequence" eval="64000"/>
        <field name="code">011</field>
        <field name="l10n_mx_edi_code">011</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
for loan in employee.get_current_loans('fonacot', payslip.date_from, payslip.date_to):
    result += loan.monthly_withhold
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_012_bf" model="hr.salary.rule">
        <field name="name">Anticipo de salarios</field>
        <field name="sequence" eval="65000"/>
        <field name="code">012</field>
        <field name="l10n_mx_edi_code">012</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_012 and inputs.d_012.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_012_bf" model="hr.payslip.input.type">
        <field name="code">d_012</field>
        <field name="name">Anticipo de salarios</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_013_bf" model="hr.salary.rule">
        <field name="name">Pagos hechos con exceso al trabajador</field>
        <field name="sequence" eval="66000"/>
        <field name="code">013</field>
        <field name="l10n_mx_edi_code">013</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_013 and inputs.d_013.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_013_bf" model="hr.payslip.input.type">
        <field name="code">d_013</field>
        <field name="name">Pagos hechos con exceso al trabajador</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_014_bf" model="hr.salary.rule">
        <field name="name">Errores</field>
        <field name="sequence" eval="67000"/>
        <field name="code">014</field>
        <field name="l10n_mx_edi_code">014</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.d_014 and inputs.d_014.amount
for loan in employee.get_current_loans('errors', payslip.date_from, payslip.date_to):
    result += loan.monthly_withhold
        </field>
    </record>
    <record id="hr_payslip_input_type_deduction_014_bf" model="hr.payslip.input.type">
        <field name="code">d_014</field>
        <field name="name">Errores</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_015_bf" model="hr.salary.rule">
        <field name="name">Pérdidas</field>
        <field name="sequence" eval="68000"/>
        <field name="code">015</field>
        <field name="l10n_mx_edi_code">015</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_015 and inputs.d_015.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_015_bf" model="hr.payslip.input.type">
        <field name="code">d_015</field>
        <field name="name">Pérdidas</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_016_bf" model="hr.salary.rule">
        <field name="name">Averías</field>
        <field name="sequence" eval="69000"/>
        <field name="code">016</field>
        <field name="l10n_mx_edi_code">016</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.d_016 and inputs.d_016.amount
for loan in employee.get_current_loans('breakdowns', payslip.date_from, payslip.date_to):
    result += loan.monthly_withhold
        </field>
    </record>
    <record id="hr_payslip_input_type_deduction_016_bf" model="hr.payslip.input.type">
        <field name="code">d_016</field>
        <field name="name">Averías</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_017_bf" model="hr.salary.rule">
        <field name="name">Adquisición de artículos producidos por la empresa o establecimiento</field>
        <field name="sequence" eval="70000"/>
        <field name="code">017</field>
        <field name="l10n_mx_edi_code">017</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_017 and inputs.d_017.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_017_bf" model="hr.payslip.input.type">
        <field name="code">d_017</field>
        <field name="name">Adquisición de artículos producidos por la empresa o establecimiento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_018_bf" model="hr.salary.rule">
        <field name="name">Cuotas para la constitución y fomento de sociedades cooperativas y de cajas de ahorro</field>
        <field name="sequence" eval="71000"/>
        <field name="code">018</field>
        <field name="l10n_mx_edi_code">018</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_018 and inputs.d_018.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_018_bf" model="hr.payslip.input.type">
        <field name="code">d_018</field>
        <field name="name">Cuotas para la constitución y fomento de sociedades cooperativas y de cajas de ahorro</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_019_bf" model="hr.salary.rule">
        <field name="name">Cuotas sindicales</field>
        <field name="sequence" eval="72000"/>
        <field name="code">019</field>
        <field name="l10n_mx_edi_code">019</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_019 and inputs.d_019.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_019_bf" model="hr.payslip.input.type">
        <field name="code">d_019</field>
        <field name="name">Cuotas sindicales</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_020_bf" model="hr.salary.rule">
        <field name="name">Ausencia - Ausentismo</field>
        <field name="sequence" eval="73000"/>
        <field name="code">D020</field>
        <field name="l10n_mx_edi_code">020</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
payment_daily = contract.wage / 30
leaves = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0.0
result = payment_daily * leaves
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_021_bf" model="hr.salary.rule">
        <field name="name">Cuotas obrero patronales</field>
        <field name="sequence" eval="74000"/>
        <field name="code">021</field>
        <field name="l10n_mx_edi_code">021</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_021 and inputs.d_021.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_021_bf" model="hr.payslip.input.type">
        <field name="code">d_021</field>
        <field name="name">Cuotas obrero patronales</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_022_bf" model="hr.salary.rule">
        <field name="name">Impuestos Locales</field>
        <field name="sequence" eval="75000"/>
        <field name="code">022</field>
        <field name="l10n_mx_edi_code">022</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_022 and inputs.d_022.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_022_bf" model="hr.payslip.input.type">
        <field name="code">d_022</field>
        <field name="name">Impuestos Locales</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_023_bf" model="hr.salary.rule">
        <field name="name">Aportaciones voluntarias</field>
        <field name="sequence" eval="76000"/>
        <field name="code">023</field>
        <field name="l10n_mx_edi_code">023</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_023 and inputs.d_023.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_023_bf" model="hr.payslip.input.type">
        <field name="code">d_023</field>
        <field name="name">Aportaciones voluntarias</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_024_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Gratificación Anual - Exento</field>
        <field name="sequence" eval="77000"/>
        <field name="code">024</field>
        <field name="l10n_mx_edi_code">024</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_024 and inputs.d_024.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_024_bf" model="hr.payslip.input.type">
        <field name="code">d_024</field>
        <field name="name">Ajuste en Gratificación Anual - Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_025_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Gratificación Anual - Gravado</field>
        <field name="sequence" eval="77100"/>
        <field name="code">025</field>
        <field name="l10n_mx_edi_code">025</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_025 and inputs.d_025.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_025_bf" model="hr.payslip.input.type">
        <field name="code">d_025</field>
        <field name="name">Ajuste en Gratificación Anual - Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_026_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Participación de los Trabajadores en las Utilidades PTU Exento</field>
        <field name="sequence" eval="77200"/>
        <field name="code">026</field>
        <field name="l10n_mx_edi_code">026</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_026 and inputs.d_026.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_026_bf" model="hr.payslip.input.type">
        <field name="code">d_026</field>
        <field name="name">Ajuste en Participación de los Trabajadores en las Utilidades PTU Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_027_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Participación de los Trabajadores en las Utilidades PTU Gravado</field>
        <field name="sequence" eval="77300"/>
        <field name="code">027</field>
        <field name="l10n_mx_edi_code">027</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_027 and inputs.d_027.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_027_bf" model="hr.payslip.input.type">
        <field name="code">d_027</field>
        <field name="name">Ajuste en Participación de los Trabajadores en las Utilidades PTU Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_028_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Reembolso de Gastos Médicos Dentales y Hospitalarios Exento</field>
        <field name="sequence" eval="77400"/>
        <field name="code">028</field>
        <field name="l10n_mx_edi_code">028</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_028 and inputs.d_028.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_028_bf" model="hr.payslip.input.type">
        <field name="code">d_028</field>
        <field name="name">Ajuste en Reembolso de Gastos Médicos Dentales y Hospitalarios Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_029_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Fondo de ahorro Exento</field>
        <field name="sequence" eval="77500"/>
        <field name="code">029</field>
        <field name="l10n_mx_edi_code">029</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_029 and inputs.d_029.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_029_bf" model="hr.payslip.input.type">
        <field name="code">d_029</field>
        <field name="name">Ajuste en Fondo de ahorro Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_030_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Caja de ahorro Exento</field>
        <field name="sequence" eval="77600"/>
        <field name="code">030</field>
        <field name="l10n_mx_edi_code">030</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_030 and inputs.d_030.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_030_bf" model="hr.payslip.input.type">
        <field name="code">d_030</field>
        <field name="name">Ajuste en Caja de ahorro Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_031_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Contribuciones a Cargo del Trabajador Pagadas por el Patrón Exento</field>
        <field name="sequence" eval="77700"/>
        <field name="code">031</field>
        <field name="l10n_mx_edi_code">031</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_031 and inputs.d_031.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_031_bf" model="hr.payslip.input.type">
        <field name="code">d_031</field>
        <field name="name">Ajuste en Contribuciones a Cargo del Trabajador Pagadas por el Patrón Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_032_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Premios por puntualidad Gravado</field>
        <field name="sequence" eval="77800"/>
        <field name="code">032</field>
        <field name="l10n_mx_edi_code">032</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_032 and inputs.d_032.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_032_bf" model="hr.payslip.input.type">
        <field name="code">d_032</field>
        <field name="name">Ajuste en Premios por puntualidad Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_033_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima de Seguro de vida Exento</field>
        <field name="sequence" eval="77900"/>
        <field name="code">033</field>
        <field name="l10n_mx_edi_code">033</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_033 and inputs.d_033.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_033_bf" model="hr.payslip.input.type">
        <field name="code">d_033</field>
        <field name="name">Ajuste en Prima de Seguro de vida Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_034_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de Gastos Médicos Mayores Exento</field>
        <field name="sequence" eval="78000"/>
        <field name="code">034</field>
        <field name="l10n_mx_edi_code">034</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_034 and inputs.d_034.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_034_bf" model="hr.payslip.input.type">
        <field name="code">d_034</field>
        <field name="name">Ajuste en Seguro de Gastos Médicos Mayores Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_035_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Cuotas Sindicales Pagadas por el Patrón Exento</field>
        <field name="sequence" eval="78100"/>
        <field name="code">035</field>
        <field name="l10n_mx_edi_code">035</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_035 and inputs.d_035.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_035_bf" model="hr.payslip.input.type">
        <field name="code">d_035</field>
        <field name="name">Ajuste en Cuotas Sindicales Pagadas por el Patrón Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_036_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidios por incapacidad Exento</field>
        <field name="sequence" eval="78200"/>
        <field name="code">036</field>
        <field name="l10n_mx_edi_code">036</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_036 and inputs.d_036.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_036_bf" model="hr.payslip.input.type">
        <field name="code">d_036</field>
        <field name="name">Ajuste en Subsidios por incapacidad Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_037_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Becas para trabajadores o hijos Exento</field>
        <field name="sequence" eval="78300"/>
        <field name="code">037</field>
        <field name="l10n_mx_edi_code">037</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_037 and inputs.d_037.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_037_bf" model="hr.payslip.input.type">
        <field name="code">d_037</field>
        <field name="name">Ajuste en Becas para trabajadores o hijos Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_038_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Horas extra Exento</field>
        <field name="sequence" eval="78400"/>
        <field name="code">038</field>
        <field name="l10n_mx_edi_code">038</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_038 and inputs.d_038.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_038_bf" model="hr.payslip.input.type">
        <field name="code">d_038</field>
        <field name="name">Ajuste en Horas extra Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_039_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Horas extra Gravado</field>
        <field name="sequence" eval="78500"/>
        <field name="code">039</field>
        <field name="l10n_mx_edi_code">039</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_039 and inputs.d_039.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_039_bf" model="hr.payslip.input.type">
        <field name="code">d_039</field>
        <field name="name">Ajuste en Horas extra Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_040_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima dominical Exento</field>
        <field name="sequence" eval="78600"/>
        <field name="code">040</field>
        <field name="l10n_mx_edi_code">040</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_040 and inputs.d_040.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_040_bf" model="hr.payslip.input.type">
        <field name="code">d_040</field>
        <field name="name">Ajuste en Prima dominical Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_041_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima dominical Gravado</field>
        <field name="sequence" eval="78700"/>
        <field name="code">041</field>
        <field name="l10n_mx_edi_code">041</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_041 and inputs.d_041.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_041_bf" model="hr.payslip.input.type">
        <field name="code">d_041</field>
        <field name="name">Ajuste en Prima dominical Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_042_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima vacacional Exento</field>
        <field name="sequence" eval="78800"/>
        <field name="code">042</field>
        <field name="l10n_mx_edi_code">042</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_042 and inputs.d_042.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_042_bf" model="hr.payslip.input.type">
        <field name="code">d_042</field>
        <field name="name">Ajuste en Prima vacacional Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_043_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima vacacional Gravado</field>
        <field name="sequence" eval="78900"/>
        <field name="code">043</field>
        <field name="l10n_mx_edi_code">043</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_043 and inputs.d_043.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_043_bf" model="hr.payslip.input.type">
        <field name="code">d_043</field>
        <field name="name">Ajuste en Prima vacacional Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_048_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de retiro Exento</field>
        <field name="sequence" eval="79400"/>
        <field name="code">048</field>
        <field name="l10n_mx_edi_code">048</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_048 and inputs.d_048.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_048_bf" model="hr.payslip.input.type">
        <field name="code">d_048</field>
        <field name="name">Ajuste en Seguro de retiro Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_049_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Indemnizaciones Exento</field>
        <field name="sequence" eval="79500"/>
        <field name="code">049</field>
        <field name="l10n_mx_edi_code">049</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_049 and inputs.d_049.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_049_bf" model="hr.payslip.input.type">
        <field name="code">d_049</field>
        <field name="name">Ajuste en Indemnizaciones Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_050_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Indemnizaciones Gravado</field>
        <field name="sequence" eval="79600"/>
        <field name="code">050</field>
        <field name="l10n_mx_edi_code">050</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_050 and inputs.d_050.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_050_bf" model="hr.payslip.input.type">
        <field name="code">d_050</field>
        <field name="name">Ajuste en Indemnizaciones Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_051_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Reembolso por funeral Exento</field>
        <field name="sequence" eval="79700"/>
        <field name="code">051</field>
        <field name="l10n_mx_edi_code">051</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_051 and inputs.d_051.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_051_bf" model="hr.payslip.input.type">
        <field name="code">d_051</field>
        <field name="name">Ajuste en Reembolso por funeral Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_052_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Cuotas de seguridad social pagadas por el patrón Exento</field>
        <field name="sequence" eval="79800"/>
        <field name="code">052</field>
        <field name="l10n_mx_edi_code">052</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_052 and inputs.d_052.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_052_bf" model="hr.payslip.input.type">
        <field name="code">d_052</field>
        <field name="name">Ajuste en Cuotas de seguridad social pagadas por el patrón Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_053_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Comisiones Gravado</field>
        <field name="sequence" eval="79900"/>
        <field name="code">053</field>
        <field name="l10n_mx_edi_code">053</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_053 and inputs.d_053.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_053_bf" model="hr.payslip.input.type">
        <field name="code">d_053</field>
        <field name="name">Ajuste en Comisiones Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_054_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de despensa Exento</field>
        <field name="sequence" eval="80000"/>
        <field name="code">D054</field>
        <field name="l10n_mx_edi_code">054</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_054 and inputs.d_054.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_054_bf" model="hr.payslip.input.type">
        <field name="code">d_054</field>
        <field name="name">Ajuste en Vales de despensa Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_055_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de restaurante Exento</field>
        <field name="sequence" eval="80100"/>
        <field name="code">055</field>
        <field name="l10n_mx_edi_code">055</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_055 and inputs.d_055.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_055_bf" model="hr.payslip.input.type">
        <field name="code">d_055</field>
        <field name="name">Ajuste en Vales de restaurante Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_056_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de gasolina Exento</field>
        <field name="sequence" eval="80200"/>
        <field name="code">056</field>
        <field name="l10n_mx_edi_code">056</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_056 and inputs.d_056.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_056_bf" model="hr.payslip.input.type">
        <field name="code">d_056</field>
        <field name="name">Ajuste en Vales de gasolina Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_057_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de ropa Exento</field>
        <field name="sequence" eval="80300"/>
        <field name="code">057</field>
        <field name="l10n_mx_edi_code">057</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_057 and inputs.d_057.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_057_bf" model="hr.payslip.input.type">
        <field name="code">d_057</field>
        <field name="name">Ajuste en Vales de ropa Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_058_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para renta Exento</field>
        <field name="sequence" eval="80400"/>
        <field name="code">058</field>
        <field name="l10n_mx_edi_code">058</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_058 and inputs.d_058.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_058_bf" model="hr.payslip.input.type">
        <field name="code">d_058</field>
        <field name="name">Ajuste en Ayuda para renta Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_059_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para artículos escolares Exento</field>
        <field name="sequence" eval="80500"/>
        <field name="code">059</field>
        <field name="l10n_mx_edi_code">059</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_059 and inputs.d_059.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_059_bf" model="hr.payslip.input.type">
        <field name="code">d_059</field>
        <field name="name">Ajuste en Ayuda para artículos escolares Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_060_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para anteojos Exento</field>
        <field name="sequence" eval="80600"/>
        <field name="code">060</field>
        <field name="l10n_mx_edi_code">060</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_060 and inputs.d_060.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_060_bf" model="hr.payslip.input.type">
        <field name="code">d_060</field>
        <field name="name">Ajuste en Ayuda para anteojos Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_061_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para transporte Exento</field>
        <field name="sequence" eval="80700"/>
        <field name="code">061</field>
        <field name="l10n_mx_edi_code">061</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_061 and inputs.d_061.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_061_bf" model="hr.payslip.input.type">
        <field name="code">d_061</field>
        <field name="name">Ajuste en Ayuda para transporte Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_062_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para gastos de funeral Exento</field>
        <field name="sequence" eval="80800"/>
        <field name="code">062</field>
        <field name="l10n_mx_edi_code">062</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_062 and inputs.d_062.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_062_bf" model="hr.payslip.input.type">
        <field name="code">d_062</field>
        <field name="name">Ajuste en Ayuda para gastos de funeral Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_063_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Otros ingresos por salarios Exento</field>
        <field name="sequence" eval="80900"/>
        <field name="code">063</field>
        <field name="l10n_mx_edi_code">063</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_063 and inputs.d_063.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_063_bf" model="hr.payslip.input.type">
        <field name="code">d_063</field>
        <field name="name">Ajuste en Otros ingresos por salarios Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_064_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Otros ingresos por salarios Gravado</field>
        <field name="sequence" eval="81000"/>
        <field name="code">064</field>
        <field name="l10n_mx_edi_code">064</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_064 and inputs.d_064.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_064_bf" model="hr.payslip.input.type">
        <field name="code">d_064</field>
        <field name="name">Ajuste en Otros ingresos por salarios Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_065_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Exento</field>
        <field name="sequence" eval="81100"/>
        <field name="code">065</field>
        <field name="l10n_mx_edi_code">065</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_065 and inputs.d_065.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_065_bf" model="hr.payslip.input.type">
        <field name="code">d_065</field>
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_066_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Gravado</field>
        <field name="sequence" eval="81200"/>
        <field name="code">066</field>
        <field name="l10n_mx_edi_code">066</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_066 and inputs.d_066.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_066_bf" model="hr.payslip.input.type">
        <field name="code">d_066</field>
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_069_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Acumulable</field>
        <field name="sequence" eval="81500"/>
        <field name="code">069</field>
        <field name="l10n_mx_edi_code">069</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_069 and inputs.d_069.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_069_bf" model="hr.payslip.input.type">
        <field name="code">d_069</field>
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro Acumulable</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_070_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro No Acumulable</field>
        <field name="sequence" eval="81600"/>
        <field name="code">070</field>
        <field name="l10n_mx_edi_code">070</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_070 and inputs.d_070.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_070_bf" model="hr.payslip.input.type">
        <field name="code">d_070</field>
        <field name="name">Ajuste en Jubilaciones, pensiones o haberes de retiro No Acumulable</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_071_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="sequence" eval="81700"/>
        <field name="code">071</field>
        <field name="l10n_mx_edi_code">071</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Based on http://www.sat.gob.mx/informacion_fiscal/devoluciones_compensaciones/Paginas/subsidio_al_empleo.aspx
income_period = categories.PERGRA
table = [(0.01, 1768.96, 407.02), (1768.97, 2653.38, 406.83),
         (2653.39, 3472.84, 406.62), (3472.85, 3537.87, 392.77),
         (3537.88, 4446.15, 382.46), (4446.16, 4717.18, 354.23),
         (4717.19, 5335.42, 324.87), (5335.43, 6224.67, 294.63),
         (6224.68, 7113.90, 253.54), (7113.91, 7382.33, 217.61),
         (7382.34, 99999999.00, 0)]
days_schedule = {'01': 1, '02': 7, '03': 14, '04': 15, '05': 30}
result = 0.01
days_work = days_schedule.get(contract.l10n_mx_edi_schedule_pay, 0)
if days_work:
    income_period = (income_period / days_work) * 30
    for value in table:
        if income_period >=value[0] and value[1] >= income_period:
            result = value[2]
            break
    result = (0.01 if employee.l10n_mx_edi_contract_regime_type == '02' else 0) if not (result * days_work) / 30 else 0 </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_072_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ingresos en acciones o títulos valor que representan bienes Exento</field>
        <field name="sequence" eval="81800"/>
        <field name="code">072</field>
        <field name="l10n_mx_edi_code">072</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_072 and inputs.d_072.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_072_bf" model="hr.payslip.input.type">
        <field name="code">d_072</field>
        <field name="name">Ajuste en Ingresos en acciones o títulos valor que representan bienes Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_073_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ingresos en acciones o títulos valor que representan bienes Gravado</field>
        <field name="sequence" eval="81900"/>
        <field name="code">073</field>
        <field name="l10n_mx_edi_code">073</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_073 and inputs.d_073.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_073_bf" model="hr.payslip.input.type">
        <field name="code">d_073</field>
        <field name="name">Ajuste en Ingresos en acciones o títulos valor que representan bienes Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_074_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Alimentación Exento</field>
        <field name="sequence" eval="82000"/>
        <field name="code">074</field>
        <field name="l10n_mx_edi_code">074</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_074 and inputs.d_074.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_074_bf" model="hr.payslip.input.type">
        <field name="code">d_074</field>
        <field name="name">Ajuste en Alimentación Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_075_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Alimentación Gravado</field>
        <field name="sequence" eval="82100"/>
        <field name="code">075</field>
        <field name="l10n_mx_edi_code">075</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_075 and inputs.d_075.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_075_bf" model="hr.payslip.input.type">
        <field name="code">d_075</field>
        <field name="name">Ajuste en Alimentación Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_076_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Habitación Exento</field>
        <field name="sequence" eval="82200"/>
        <field name="code">076</field>
        <field name="l10n_mx_edi_code">076</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_076 and inputs.d_076.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_076_bf" model="hr.payslip.input.type">
        <field name="code">d_076</field>
        <field name="name">Ajuste en Habitación Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_077_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Habitación Gravado</field>
        <field name="sequence" eval="82300"/>
        <field name="code">077</field>
        <field name="l10n_mx_edi_code">077</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_077 and inputs.d_077.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_077_bf" model="hr.payslip.input.type">
        <field name="code">d_077</field>
        <field name="name">Ajuste en Habitación Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_078_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Premios por asistencia</field>
        <field name="sequence" eval="82400"/>
        <field name="code">078</field>
        <field name="l10n_mx_edi_code">078</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_078 and inputs.d_078.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_078_bf" model="hr.payslip.input.type">
        <field name="code">d_078</field>
        <field name="name">Ajuste en Premios por asistencia</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_079_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados</field>
        <field name="sequence" eval="82500"/>
        <field name="code">079</field>
        <field name="l10n_mx_edi_code">079</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_079 and inputs.d_079.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_079_bf" model="hr.payslip.input.type">
        <field name="code">d_079</field>
        <field name="name">Ajuste en Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_080_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Viáticos gravados</field>
        <field name="sequence" eval="82600"/>
        <field name="code">080</field>
        <field name="l10n_mx_edi_code">080</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_080 and inputs.d_080.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_080_bf" model="hr.payslip.input.type">
        <field name="code">d_080</field>
        <field name="name">Ajuste en Viáticos gravados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_081_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Viáticos - entregados al trabajador</field>
        <field name="sequence" eval="82700"/>
        <field name="code">081</field>
        <field name="l10n_mx_edi_code">081</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_081 and inputs.d_081.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_081_bf" model="hr.payslip.input.type">
        <field name="code">d_081</field>
        <field name="name">Ajuste en Viáticos - entregados al trabajador</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_082_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Fondo de ahorro Gravado</field>
        <field name="sequence" eval="82800"/>
        <field name="code">082</field>
        <field name="l10n_mx_edi_code">082</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_082 and inputs.d_082.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_082_bf" model="hr.payslip.input.type">
        <field name="code">d_082</field>
        <field name="name">Ajuste en Fondo de ahorro Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_083_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Caja de ahorro Gravado</field>
        <field name="sequence" eval="82900"/>
        <field name="code">083</field>
        <field name="l10n_mx_edi_code">083</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_083 and inputs.d_083.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_083_bf" model="hr.payslip.input.type">
        <field name="code">d_083</field>
        <field name="name">Ajuste en Caja de ahorro Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_084_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima de Seguro de vida Gravado</field>
        <field name="sequence" eval="83000"/>
        <field name="code">084</field>
        <field name="l10n_mx_edi_code">084</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_084 and inputs.d_084.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_084_bf" model="hr.payslip.input.type">
        <field name="code">d_084</field>
        <field name="name">Ajuste en Prima de Seguro de vida Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_085_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de Gastos Médicos Mayores Gravado</field>
        <field name="sequence" eval="83100"/>
        <field name="code">085</field>
        <field name="l10n_mx_edi_code">085</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_085 and inputs.d_085.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_085_bf" model="hr.payslip.input.type">
        <field name="code">d_085</field>
        <field name="name">Ajuste en Seguro de Gastos Médicos Mayores Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_086_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidios por incapacidad Gravado</field>
        <field name="sequence" eval="83200"/>
        <field name="code">086</field>
        <field name="l10n_mx_edi_code">086</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_086 and inputs.d_086.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_086_bf" model="hr.payslip.input.type">
        <field name="code">d_086</field>
        <field name="name">Ajuste en Subsidios por incapacidad Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_087_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Becas para trabajadores o hijos Gravado</field>
        <field name="sequence" eval="83300"/>
        <field name="code">087</field>
        <field name="l10n_mx_edi_code">087</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_087 and inputs.d_087.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_087_bf" model="hr.payslip.input.type">
        <field name="code">d_087</field>
        <field name="name">Ajuste en Becas para trabajadores o hijos Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_088_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Seguro de retiro Gravado</field>
        <field name="sequence" eval="83400"/>
        <field name="code">088</field>
        <field name="l10n_mx_edi_code">088</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_088 and inputs.d_088.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_088_bf" model="hr.payslip.input.type">
        <field name="code">d_088</field>
        <field name="name">Ajuste en Seguro de retiro Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_089_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de despensa Gravado</field>
        <field name="sequence" eval="83500"/>
        <field name="code">089</field>
        <field name="l10n_mx_edi_code">089</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_089 and inputs.d_089.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_089_bf" model="hr.payslip.input.type">
        <field name="code">d_089</field>
        <field name="name">Ajuste en Vales de despensa Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_090_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de restaurante Gravado</field>
        <field name="sequence" eval="83600"/>
        <field name="code">090</field>
        <field name="l10n_mx_edi_code">090</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_090 and inputs.d_090.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_090_bf" model="hr.payslip.input.type">
        <field name="code">d_090</field>
        <field name="name">Ajuste en Vales de restaurante Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_091_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de gasolina Gravado</field>
        <field name="sequence" eval="83700"/>
        <field name="code">091</field>
        <field name="l10n_mx_edi_code">091</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_091 and inputs.d_091.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_091_bf" model="hr.payslip.input.type">
        <field name="code">d_091</field>
        <field name="name">Ajuste en Vales de gasolina Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_092_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Vales de ropa Gravado</field>
        <field name="sequence" eval="83800"/>
        <field name="code">092</field>
        <field name="l10n_mx_edi_code">092</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_092 and inputs.d_092.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_092_bf" model="hr.payslip.input.type">
        <field name="code">d_092</field>
        <field name="name">Ajuste en Vales de ropa Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_093_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para renta Gravado</field>
        <field name="sequence" eval="83900"/>
        <field name="code">093</field>
        <field name="l10n_mx_edi_code">093</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_093 and inputs.d_093.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_093_bf" model="hr.payslip.input.type">
        <field name="code">d_093</field>
        <field name="name">Ajuste en Ayuda para renta Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_094_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para artículos escolares Gravado</field>
        <field name="sequence" eval="84000"/>
        <field name="code">094</field>
        <field name="l10n_mx_edi_code">094</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_094 and inputs.d_094.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_094_bf" model="hr.payslip.input.type">
        <field name="code">d_094</field>
        <field name="name">Ajuste en Ayuda para artículos escolares Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_095_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para anteojos Gravado</field>
        <field name="sequence" eval="84100"/>
        <field name="code">095</field>
        <field name="l10n_mx_edi_code">095</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_095 and inputs.d_095.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_095_bf" model="hr.payslip.input.type">
        <field name="code">d_095</field>
        <field name="name">Ajuste en Ayuda para anteojos Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_096_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para transporte Gravado</field>
        <field name="sequence" eval="84200"/>
        <field name="code">096</field>
        <field name="l10n_mx_edi_code">096</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_096 and inputs.d_096.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_096_bf" model="hr.payslip.input.type">
        <field name="code">d_096</field>
        <field name="name">Ajuste en Ayuda para transporte Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_097_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Ayuda para gastos de funeral Gravado</field>
        <field name="sequence" eval="84300"/>
        <field name="code">097</field>
        <field name="l10n_mx_edi_code">097</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_097 and inputs.d_097.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_097_bf" model="hr.payslip.input.type">
        <field name="code">d_097</field>
        <field name="name">Ajuste en Ayuda para gastos de funeral Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_098_bf" model="hr.salary.rule">
        <field name="name">Ajuste a ingresos asimilados a salarios gravados</field>
        <field name="sequence" eval="84400"/>
        <field name="code">098</field>
        <field name="l10n_mx_edi_code">098</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_098 and inputs.d_098.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_098_bf" model="hr.payslip.input.type">
        <field name="code">d_098</field>
        <field name="name">Ajuste a ingresos asimilados a salarios gravados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_099_bf" model="hr.salary.rule">
        <field name="name">Ajuste a ingresos por sueldos y salarios gravados</field>
        <field name="sequence" eval="84500"/>
        <field name="code">099</field>
        <field name="l10n_mx_edi_code">099</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_099 and inputs.d_099.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_099_bf" model="hr.payslip.input.type">
        <field name="code">d_099</field>
        <field name="name">Ajuste a ingresos por sueldos y salarios gravados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_100_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Viáticos exentos</field>
        <field name="sequence" eval="84600"/>
        <field name="code">100</field>
        <field name="l10n_mx_edi_code">100</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_100 and inputs.d_100.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_100_bf" model="hr.payslip.input.type">
        <field name="code">d_100</field>
        <field name="name">Ajuste en Viáticos exentos</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_101_bf" model="hr.salary.rule">
        <field name="name">ISR Retenido de ejercicio anterior</field>
        <field name="sequence" eval="85000"/>
        <field name="code">101</field>
        <field name="l10n_mx_edi_code">101</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_101 and inputs.d_101.amount</field>
    </record>
    <record id="hr_rule_input_deduction_101_bf" model="hr.payslip.input.type">
        <field name="code">d_101</field>
        <field name="name">ISR Retenido de ejercicio anterior</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_102_bf" model="hr.salary.rule">
        <field name="name">Ajuste a pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades, gravados</field>
        <field name="sequence" eval="86000"/>
        <field name="code">102</field>
        <field name="l10n_mx_edi_code">102</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_102 and inputs.d_102.amount</field>
    </record>
    <record id="hr_rule_input_deduction_102_bf" model="hr.payslip.input.type">
        <field name="code">d_102</field>
        <field name="name">Ajuste a pagos por gratificaciones, primas, compensaciones, recompensas u otros a extrabajadores derivados de jubilación en parcialidades, gravados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_103_bf" model="hr.salary.rule">
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo gravados</field>
        <field name="sequence" eval="86100"/>
        <field name="code">103</field>
        <field name="l10n_mx_edi_code">103</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_103 and inputs.d_103.amount</field>
    </record>
    <record id="hr_rule_input_deduction_103_bf" model="hr.payslip.input.type">
        <field name="code">d_103</field>
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo gravados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_104_bf" model="hr.salary.rule">
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo exentos</field>
        <field name="sequence" eval="86200"/>
        <field name="code">104</field>
        <field name="l10n_mx_edi_code">104</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_104 and inputs.d_104.amount</field>
    </record>
    <record id="hr_rule_input_deduction_104_bf" model="hr.payslip.input.type">
        <field name="code">d_104</field>
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en parcialidades derivados de la ejecución de una resolución judicial o de un laudo exentos</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_105_bf" model="hr.salary.rule">
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo gravados</field>
        <field name="sequence" eval="86300"/>
        <field name="code">105</field>
        <field name="l10n_mx_edi_code">105</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_105 and inputs.d_105.amount</field>
    </record>
    <record id="hr_rule_input_deduction_105_bf" model="hr.payslip.input.type">
        <field name="code">d_105</field>
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo gravados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_106_bf" model="hr.salary.rule">
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo exentos</field>
        <field name="sequence" eval="86400"/>
        <field name="code">106</field>
        <field name="l10n_mx_edi_code">106</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_106 and inputs.d_106.amount</field>
    </record>
    <record id="hr_rule_input_deduction_106_bf" model="hr.payslip.input.type">
        <field name="code">d_106</field>
        <field name="name">Ajuste a pagos que se realicen a extrabajadores que obtengan una jubilación en una sola exhibición derivados de la ejecución de una resolución judicial o de un laudo exentos</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_107_bf" model="hr.salary.rule">
        <field name="name">Ajuste al Subsidio Causado</field>
        <field name="sequence" eval="86500"/>
        <field name="code">107</field>
        <field name="l10n_mx_edi_code">107</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.d_107 and inputs.d_107.amount
        </field>
    </record>
    <record id="hr_rule_input_deduction_107_bf" model="hr.payslip.input.type">
        <field name="code">d_107</field>
        <field name="name">Ajuste al Subsidio Causado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_isr_bf" model="hr.salary.rule">
        <field name="name">AUX ISR</field>
        <field name="sequence" eval="87000"/>
        <field name="code">AUX_ISR</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
income_period = categories.PERGRA - D020 - IEG006 - IM006 - IRT006 - LPHC006
# Table ISR (limite_inferior, limite_superior, cuota_fija, tasa)
table = {'05': [(0.01, 644.58, 0.00, 0.0192), (644.59, 5470.92, 12.38, 0.0640),
         (5470.93, 9614.66, 321.26, 0.1088), (9614.67, 11176.62, 772.10, 0.1600),
         (11176.63, 13381.47, 1022.01, 0.1792), (13381.48, 26988.5, 1417.12, 0.2136),
         (26988.51, 42537.58, 4323.58, 0.2352), (42537.59, 81211.25, 7980.73, 0.3000),
         (81211.26, 108281.67, 19582.83, 0.3200), (108281.68, 324845.01, 28245.36, 0.3400),
         (324845.01, 999999999, 101876.9, 0.3500)],
         '04': [(0.01, 318.0, 0.00, 0.0192), (318.01, 2699.4, 6.15, 0.0640),
         (2699.41, 4744.05, 158.55,  0.1088), (4744.06, 5514.75, 381.00,  0.1600),
         (5514.76, 6602.7, 504.3,  0.1792), (6602.71, 13316.7, 699.3, 0.2136),
         (13316.71, 20988.9, 2133.3, 0.2352), (20988.91, 40071.3, 3937.8, 0.3000),
         (40071.31, 53428.5, 9662.55, 0.3200), (53428.51, 160285.35, 13936.80, 0.3400),
         (160285.36, 999999999, 50268.15, 0.3500)],
         '02': [(0.01, 148.4, 0.00, 0.0192), (148.41, 1259.72, 2.87, 0.0640),
         (1259.73, 2213.89, 73.99, 0.1088), (2213.90, 2573.55, 177.80, 0.1600),
         (2573.56, 3081.26, 235.34, 0.1792), (3081.27, 6214.46, 326.34, 0.2136),
         (6214.47, 9794.82, 995.54, 0.2352), (9794.83, 18699.94, 1837.64, 0.3000),
         (18699.95, 24933.30, 4509.19, 0.3200), (24933.31, 74799.83, 6503.84, 0.3400),
         (74799.84, 99999999, 23458.47, 0.3500)],
         '01': [(0.01, 21.20, 0.00, 0.0192), (21.21, 179.96, 0.41, 0.0640),
         (179.97, 316.27, 10.57, 0.1088), (316.28, 367.65, 25.40, 0.1600),
         (367.66, 440.18, 33.62, 0.1792), (440.19, 887.78, 46.62, 0.2136),
         (887.79, 1399.26, 142.22, 0.2352), (1399.27, 2671.42, 262.52, 0.3000),
         (2671.43, 3561.90, 644.17, 0.3200), (3561.91, 10685.69, 929.12, 0.3400),
         (10685.70, 99999999, 3351.21, 0.3500)],
         '10': [(0.01, 212, 0.00, 0.0192), (212.01, 1799.6, 4.10, 0.0640),
         (1799.61, 3162.70, 105.70, 0.1088), (3162.71, 3676.50, 254, 0.1600),
         (3676.51, 4401.80, 466.20, 0.1792), (4401.81, 8877.80, 466.20, 0.2136),
         (8877.81, 13992.60, 1422.20, 0.2352), (13992.61, 26714.20, 2625.20, 0.3000),
         (26714.21, 35619, 6441.70, 0.3200), (35619.01, 106856.90, 9291.20, 0.3400),
         (106856.91, 99999999, 33512.10, 0.3500)]}
result = 0
table_isr = table.get(contract.l10n_mx_edi_schedule_pay, [])
if table_isr:
    for value in table_isr:
        if income_period >=value[0] and value[1] >= income_period:
            extra = income_period - value[0]
            result = (extra * value[3]) + value[2]
            break
if not payslip.company_id.l10n_mx_edi_isr_annual_adjustment and payslip.dict.l10n_mx_edi_is_last_payslip():
    category = employee.env.ref('l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed')
    payslips = employee.slip_ids.filtered(lambda sl: sl.state == 'done' and sl.id != payslip.id and sl.date_from.month == payslip.date_from.month and sl.date_from.year == payslip.date_from.year)
    lines = payslips.mapped('line_ids')
    income_monthly = income_period + sum(lines.filtered(lambda li: li.category_id.id == category.id).mapped('total'))
    for value in table['05']:
        if income_monthly >=value[0] and value[1] >= income_monthly:
            extra = income_monthly - value[0]
            result = (extra * value[3]) + value[2]
            break
    rule = employee.env.ref('l10n_mx_edi_payslip.hr_rule_l10n_mx_payroll_deduction_isr')
    result = result - sum(lines.filtered(lambda li: li.salary_rule_id == rule).mapped('total'))
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_aux_002_bf" model="hr.salary.rule">
        <field name="name">Auxiliar Subsidio para el empleo</field>
        <field name="code">AUX_OP002</field>
        <field name="sequence">86999</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Based on http://www.sat.gob.mx/informacion_fiscal/devoluciones_compensaciones/Paginas/subsidio_al_empleo.aspx
# TODO - Complete tables
result = 0.00
if not employee.l10n_mx_edi_is_assimilated:
    income_period = categories.PERGRA
    table = {
        '10': [
            (0.01, 581.90, 133.90),
            (581.91, 872.80, 133.80),
            (872.81, 1142.40, 133.80),
            (1142.41, 1163.80, 129.20),
            (1163.81, 1462.50, 125.80),
            (1462.51, 1551.70, 116.50),
            (1551.71, 1755.10, 106.90),
            (1755.11, 2047.60, 96.90),
            (2047.61, 2340.10, 83.40),
            (2340.11, 2428.40, 71.60),
            (2428.41, 99999999.00, 0)],
        '05': [
            (0.01, 1768.96, 407.02),
            (1768.97, 2653.38, 406.83),
            (2653.39, 3472.84, 406.62),
            (3472.85, 3537.87, 392.77),
            (3537.88, 4446.15, 382.46),
            (4446.16, 4717.18, 354.23),
            (4717.19, 5335.42, 324.87),
            (5335.43, 6224.67, 294.63),
            (6224.68, 7113.90, 253.54),
            (7113.91, 7382.33, 217.61),
            (7382.34, 99999999.00, 0)],
        '04': [
            (0.01, 872.85, 200.85),
            (872.86, 1309.20, 200.70),
            (1309.21, 1713.60, 200.70),
            (1713.61, 1745.70, 193.80),
            (1745.71, 2193.75, 188.70),
            (2193.76, 2327.55, 174.75),
            (2327.56, 2632.65, 160.35),
            (2632.66, 3071.40, 145.35),
            (3071.41, 3510.15, 125.10),
            (3510.16, 3642.60, 107.40),
            (3642.61, 99999999.00, 0)],
        '02': [
            (0.01, 407.33, 93.73),
            (407.34, 610.96, 93.66),
            (610.97, 799.68, 93.66),
            (799.69, 814.66, 90.44),
            (814.67, 1023.75, 88.06),
            (1023.76, 1086.19, 81.55),
            (1086.20, 1228.57, 74.83),
            (1228.58, 1433.32, 67.83),
            (1433.33, 1638.07, 58.38),
            (1638.08, 1699.88, 50.12),
            (1699.89, 99999999.00, 0)],
        '01': [
            (0.01, 58.19, 13.39),
            (58.20, 87.28, 13.38),
            (87.29, 114.24, 13.38),
            (114.25, 116.38, 12.92),
            (116.39, 146.25, 12.58),
            (146.26, 155.17, 11.65),
            (155.18, 175.51, 10.69),
            (175.52, 204.76, 9.69),
            (204.77, 234.01, 8.34),
            (234.02, 242.84, 7.16),
            (242.85, 99999999.00, 0)],
    }
    table_aux = table.get(contract.l10n_mx_edi_schedule_pay, [])
    if table_aux:
        for value in table_aux:
            if income_period >=value[0] and value[1] >= income_period:
                result = value[2]
                break
    payslips = employee.slip_ids.filtered(lambda sl: sl.state == 'done' and sl.id != payslip.id and sl.date_from.month == payslip.date_from.month and sl.date_from.year == payslip.date_from.year)
    if payslip.dict.l10n_mx_edi_is_last_payslip() and payslips:
        category = employee.env.ref('l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed')
        lines = payslips.mapped('line_ids')
        income_monthly = income_period + sum(lines.filtered(lambda li: li.category_id.id == category.id).mapped('total')) - sum(lines.filtered(lambda li: li.code == 'DNL004').mapped('total'))
        for value in table['05']:
            if income_monthly >=value[0] and value[1] >= income_monthly:
                result = value[2]
                break
        rule = employee.env.ref('l10n_mx_edi_payslip.hr_rule_l10n_mx_payroll_other_payment_aux_002')
        result = result - sum(lines.filtered(lambda li: li.salary_rule_id == rule).mapped('total'))
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_002_bf" model="hr.salary.rule">
        <field name="name">ISR</field>
        <field name="sequence" eval="87005"/>
        <field name="code">ISR002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = AUX_ISR - AUX_OP002 if abs(AUX_ISR) - AUX_OP002 &gt; 0 else 0</field>
    </record>
    <!-- Other Payments -->
    <record id="hr_rule_l10n_mx_payroll_other_payment_001_bf" model="hr.salary.rule">
        <field name="name">Reintegro de ISR pagado en exceso - siempre que no haya sido enterado al SAT</field>
        <field name="sequence" eval="90000"/>
        <field name="code">OP001</field>
        <field name="l10n_mx_edi_code">001</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_001 and inputs.op_001.amount</field>
    </record>
    <record id="hr_payslip_input_type_other_payment_001_bf" model="hr.payslip.input.type">
        <field name="code">op_001</field>
        <field name="name">Reintegro de ISR pagado en exceso - siempre que no haya sido enterado al SAT</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_002_bf" model="hr.salary.rule">
        <field name="name">Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="sequence" eval="90005"/>
        <field name="code">OP002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = AUX_OP002
result = result + AUX_ISR if result &gt; abs(AUX_ISR) else (0.01 if employee.l10n_mx_edi_contract_regime_type == '02' else 0)
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_003_bf" model="hr.salary.rule">
        <field name="name">Viáticos - entregados al trabajador</field>
        <field name="sequence" eval="90010"/>
        <field name="code">OP003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_003 and inputs.op_003.amount</field>
    </record>
    <record id="hr_payslip_input_type_other_payment_003_bf" model="hr.payslip.input.type">
        <field name="code">op_003</field>
        <field name="name">Viáticos - entregados al trabajador</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_004_bf" model="hr.salary.rule">
        <field name="name">Aplicación de saldo a favor por compensación anual</field>
        <field name="sequence" eval="90015"/>
        <field name="code">OP004</field>
        <field name="l10n_mx_edi_code">004</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_004 and inputs.op_004.amount</field>
    </record>
    <record id="hr_payslip_input_type_other_payment_004_bf" model="hr.payslip.input.type">
        <field name="code">op_004</field>
        <field name="name">Aplicación de saldo a favor por compensación anual</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_005_bf" model="hr.salary.rule">
        <field name="name">Reintegro de ISR retenido en exceso de ejercicio anterior (siempre que no haya sido enterado al SAT).</field>
        <field name="sequence" eval="90020"/>
        <field name="code">OP005</field>
        <field name="l10n_mx_edi_code">005</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_005 and inputs.op_005.amount</field>
    </record>
    <record id="hr_rule_input_other_payment_005_bf" model="hr.payslip.input.type">
        <field name="code">op_005</field>
        <field name="name">Reintegro de ISR retenido en exceso de ejercicio anterior (siempre que no haya sido enterado al SAT).</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_006_bf" model="hr.salary.rule">
        <field name="name">Alimentos en bienes (Servicios de comedor y comida) Art 94 último párrafo LISR</field>
        <field name="sequence" eval="90025"/>
        <field name="code">OP006</field>
        <field name="l10n_mx_edi_code">006</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_006 and inputs.op_006.amount</field>
    </record>
    <record id="hr_rule_input_other_payment_006_bf" model="hr.payslip.input.type">
        <field name="code">op_006</field>
        <field name="name">Alimentos en bienes (Servicios de comedor y comida) Art 94 último párrafo LISR</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_007_bf" model="hr.salary.rule">
        <field name="name">ISR ajustado por subsidio</field>
        <field name="sequence" eval="90030"/>
        <field name="code">OP007</field>
        <field name="l10n_mx_edi_code">007</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_007 and inputs.op_007.amount</field>
    </record>
    <record id="hr_rule_input_other_payment_007_bf" model="hr.payslip.input.type">
        <field name="code">op_007</field>
        <field name="name">ISR ajustado por subsidio</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_008_bf" model="hr.salary.rule">
        <field name="name">Subsidio efectivamente entregado que no correspondía (Aplica sólo cuando haya ajuste al cierre de mes en relación con el Apéndice 7 de la guía de llenado de nómina)</field>
        <field name="sequence" eval="90035"/>
        <field name="code">OP008</field>
        <field name="l10n_mx_edi_code">008</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_008 and inputs.op_008.amount</field>
    </record>
    <record id="hr_rule_input_other_payment_008_bf" model="hr.payslip.input.type">
        <field name="code">op_008</field>
        <field name="name">Subsidio efectivamente entregado que no correspondía (Aplica sólo cuando haya ajuste al cierre de mes en relación con el Apéndice 7 de la guía de llenado de nómina)</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_009_bf" model="hr.salary.rule">
        <field name="name">Reembolso descuento crédito de vivienda</field>
        <field name="sequence" eval="90040"/>
        <field name="code">opcv_999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.op_009 and inputs.op_009.amount
        </field>
    </record>
    <record id="hr_rule_input_other_payment_009_bf" model="hr.payslip.input.type">
        <field name="code">op_009</field>
        <field name="name">Reembolso descuento crédito de vivienda</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_999_bf" model="hr.salary.rule">
        <field name="name">Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados</field>
        <field name="sequence" eval="90045"/>
        <field name="code">OP999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.op_999 and inputs.op_999.amount</field>
    </record>
    <record id="hr_payslip_input_type_other_payment_999_bf" model="hr.payslip.input.type">
        <field name="code">op_999</field>
        <field name="name">Pagos distintos a los listados y que no deben considerarse como ingreso por sueldos, salarios o ingresos asimilados</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_isn_nomina_bf" model="hr.salary.rule">
        <field name="name">ISN Nomina</field>
        <field name="sequence" eval="90090"/>
        <field name="code">ISN</field>
        <field name="category_id" ref="hr_payroll.COMP"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="note">Gravado multiplicado por el porcentaje de ISN del estado de la dirección de trabajo y agregado a Company Contribution</field>
        <field name="amount_python_compute">
# TODO: Add special ISN rules for CAMPECHE, HIDALGO, SINALOA. Add to christmas bonus, finiquito and liquidacion salary structures too.
income_period = (categories.PERGRA - D020 + categories.PEREXE)
if D054:
    income_period -= PG029 + PE029
result = income_period * employee.address_id.state_id.l10n_mx_payslip_isn
        </field>
    </record>
    <!-- Finiquito -->
    <record id="hr_rule_l10n_mx_payroll_perception_022_e_bf" model="hr.salary.rule">
        <field name="name">Prima por antigüedad</field>
        <field name="sequence" eval="100000"/>
        <field name="code">PE022</field>
        <field name="l10n_mx_edi_code">022</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
seniority = contract.get_seniority(date_to=payslip.date_to).get('years')
if (payslip.struct_id.type_id == payslip.env.ref('l10n_mx_edi_payslip.payroll_structure_type_finiquito') and seniority >= 15) or (payslip.struct_id.type_id == payslip.env.ref('l10n_mx_edi_payslip.payroll_structure_type_liquidacion')):
    year = payslip.date_to.year if contract.date_start.replace(year=payslip.date_to.year) &lt; payslip.date_to else payslip.date_to.year -1
    date_start = contract.date_start if contract.date_start.year == payslip.date_to else contract.date_start.replace(year=year)
    seniority += round(1 / 365 * (contract.get_seniority(date_start, date_to=payslip.date_to, method='a')['days'] - 1), 2)
    minimum_wage = employee.l10n_mx_edi_employer_registration_id.minimum_wage or contract.company_id.l10n_mx_edi_minimum_wage
    sbc = contract.l10n_mx_edi_integrated_salary
    # The basis for making the calculation can not be less than a minimum wage or more than two.
    base = minimum_wage if minimum_wage > sbc else (minimum_wage * 2 if sbc > minimum_wage * 2 else sbc)
    days = 12 * seniority
    result = base * days
    if days > 90:
        result = base * 90</field>
        <field name="note">Hasta 90 días del Salario Minimo por cada año laborado es la parte exenta. Esta en el Art 109 de la Ley del ISR. </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_022_g_bf" model="hr.salary.rule">
        <field name="name">Prima por antigüedad</field>
        <field name="sequence" eval="100005"/>
        <field name="code">PG022</field>
        <field name="l10n_mx_edi_code">022</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
seniority = contract.get_seniority(date_to=payslip.date_to).get('years')
if (payslip.struct_id.type_id == payslip.env.ref('l10n_mx_edi_payslip.payroll_structure_type_finiquito') and seniority >= 15) or (payslip.struct_id.type_id == payslip.env.ref('l10n_mx_edi_payslip.payroll_structure_type_liquidacion')):
    year = payslip.date_to.year if contract.date_start.replace(year=payslip.date_to.year) &lt; payslip.date_to else payslip.date_to.year -1
    date_start = contract.date_start if contract.date_start.year == payslip.date_to else contract.date_start.replace(year=year)
    seniority += round(1 / 365 * (contract.get_seniority(date_start, date_to=payslip.date_to, method='a')['days'] - 1), 2)
    minimum_wage = employee.l10n_mx_edi_employer_registration_id.minimum_wage or contract.company_id.l10n_mx_edi_minimum_wage
    sbc = contract.l10n_mx_edi_integrated_salary
    # The basis for making the calculation can not be less than a minimum wage or more than two.
    base = minimum_wage if minimum_wage > sbc else (minimum_wage * 2 if sbc > minimum_wage * 2 else sbc)
    days = 12 * seniority
    result = 0
    if days > 90:
        result = base * (days - 90)</field>
        <field name="note">Sólo 90 SM por cada año trabajado es exento, el excedente es gravado</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_023_g_1_bf" model="hr.salary.rule">
        <field name="name">Vacaciones (parte proporcional)</field>
        <field name="sequence" eval="100010"/>
        <field name="code">PG1023</field>
        <field name="l10n_mx_edi_code">023</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
daily_wage = contract.wage/30
days = contract.l10n_mx_edi_holidays
year = payslip.date_to.year if contract.date_start.replace(year=payslip.date_to.year) &lt; payslip.date_to else payslip.date_to.year -1
date_start = contract.date_start if contract.date_start.year == payslip.date_to else contract.date_start.replace(year=year)
seniority = contract.get_seniority(date_start, date_to=contract.date_end, method='a')['days']
result = daily_wage * (days / 365 * seniority)
result += daily_wage * (inputs.pg1_023 and inputs.pg1_023.amount or 0)
        </field>
    </record>
    <record id="hr_payslip_input_type_perception_023_g_1_bf" model="hr.payslip.input.type">
        <field name="code">pg1_023</field>
        <field name="name">Vacaciones (parte proporcional)</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_023_e_2_bf" model="hr.salary.rule">
        <field name="name">Prima Vacacional (parte proporcional)</field>
        <field name="sequence" eval="100015"/>
        <field name="code">PE2023</field>
        <field name="l10n_mx_edi_code">023</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays_exempt = 15 * contract.company_id.l10n_mx_edi_uma
holidays_bonus = PG1023 * (contract.l10n_mx_edi_vacation_bonus or 25) / 100
result = holidays_exempt if holidays_bonus > holidays_exempt else holidays_bonus
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_023_g_2_bf" model="hr.salary.rule">
        <field name="name">Prima Vacacional (parte proporcional)</field>
        <field name="sequence" eval="100020"/>
        <field name="code">PG2023</field>
        <field name="l10n_mx_edi_code">023</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="condition_select">none</field>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
holidays_exempt = 15 * contract.company_id.l10n_mx_edi_uma
holidays_bonus = PG1023 * (contract.l10n_mx_edi_vacation_bonus or 25) / 100
result = holidays_bonus - holidays_exempt if holidays_bonus > holidays_exempt else 0
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_023_e_3_bf" model="hr.salary.rule">
        <field name="name">Aguinaldo (parte proporcional)</field>
        <field name="sequence" eval="100025"/>
        <field name="code">PE3023</field>
        <field name="l10n_mx_edi_code">023</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
daily_wage = contract.wage/30
days = contract._get_days_in_current_period(contract.date_end, start_year=True)
aguinaldo_exempt = 30 * contract.company_id.l10n_mx_edi_uma
aguinaldo = daily_wage * 15 * days / 365
aguinaldo = aguinaldo_exempt if aguinaldo > aguinaldo_exempt else aguinaldo
result = aguinaldo
        </field>
    </record>
    <record id="hr_payslip_input_type_perception_023_e_3_bf" model="hr.payslip.input.type">
        <field name="code">pe3_023</field>
        <field name="name">Aguinaldo (parte proporcional)</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_023_g_3_bf" model="hr.salary.rule">
        <field name="name">Aguinaldo (parte proporcional)</field>
        <field name="sequence" eval="100030"/>
        <field name="code">PG3023</field>
        <field name="l10n_mx_edi_code">023</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
daily_wage = contract.wage/30
days = contract._get_days_in_current_period(payslip.date_to, start_year=True)
aguinaldo_exempt = 30 * contract.company_id.l10n_mx_edi_uma
aguinaldo = daily_wage * 15 / 365 * days
aguinaldo = aguinaldo - aguinaldo_exempt if aguinaldo > aguinaldo_exempt else 0
result = aguinaldo
        </field>
    </record>
    <record id="hr_payslip_input_type_perception_023_g_3_bf" model="hr.payslip.input.type">
        <field name="code">pg3_023</field>
        <field name="name">Aguinaldo (parte proporcional)</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_025_e_fin_bf" model="hr.salary.rule">
        <field name="name">Indeminizaciones</field>
        <field name="sequence" eval="100035"/>
        <field name="code">PE025</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.p_025 and inputs.p_025.amount
exempt = 90 * contract.company_id.l10n_mx_edi_uma
result = exempt if result &gt; exempt else result
        </field>
        <field name="note">Sólo 90 UMAs por año trabajado es exento, el excedente es gravado</field>
    </record>
    <record id="hr_payslip_input_type_perception_025_e_fin_bf" model="hr.payslip.input.type">
        <field name="code">p_025</field>
        <field name="name">Indeminizaciones</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_025_g_fin_bf" model="hr.salary.rule">
        <field name="name">Indeminizaciones</field>
        <field name="sequence" eval="100040"/>
        <field name="code">PG025</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.p_025 and inputs.p_025.amount
exempt = 90 * contract.company_id.l10n_mx_edi_uma
result = result - exempt if result &gt; exempt else 0
        </field>
        <field name="note">Sólo 90 UMAs por año trabajado es exento, el excedente es gravado</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_finiquito_002_bf" model="hr.salary.rule">
        <field name="name">ISR Finiquito</field>
        <field name="sequence" eval="100045"/>
        <field name="code">002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
table = [(0.01, 644.58, 0.00, 0.0192), (644.59, 5470.92, 12.38, 0.0640),
         (5470.93, 9614.66, 321.26, 0.1088), (9614.67, 11176.62, 772.10, 0.1600),
         (11176.63, 13381.47, 1022.01, 0.1792), (13381.48, 26988.5, 1417.12, 0.2136),
         (26988.51, 42537.58, 4323.58, 0.2352), (42537.59, 81211.25, 7980.73, 0.3000),
         (81211.26, 108281.67, 19582.83, 0.3200), (108281.68, 324845.01, 28245.36, 0.3400),
         (324845.01, 999999999, 101876.9, 0.3500)]

category = employee.env.ref('l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed')
payslips = employee.slip_ids.filtered(lambda sl: sl.state == 'done' and sl.id != payslip.id and sl.date_from.month == payslip.date_from.month and sl.date_from.year == payslip.date_from.year)
lines = payslips.mapped('line_ids')
income_monthly = categories.PERGRA + sum(lines.filtered(lambda li: li.category_id.id == category.id).mapped('total'))

result = 0
for value in table:
   if income_monthly >=value[0] and value[1] >= income_monthly:
        extra = income_monthly - value[0]
        result = (extra * value[3]) + value[2]
        break

rule = employee.env.ref('l10n_mx_edi_payslip.hr_rule_l10n_mx_payroll_deduction_isr')
result -= sum(lines.filtered(lambda li: li.salary_rule_id == rule).mapped('total')) + ISR002
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_044_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima por antigüedad Exento</field>
        <field name="sequence" eval="100050"/>
        <field name="code">044</field>
        <field name="l10n_mx_edi_code">044</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_044 and inputs.d_044.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_044_bf" model="hr.payslip.input.type">
        <field name="code">d_044</field>
        <field name="name">Ajuste en Prima por antigüedad Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_045_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Prima por antigüedad Gravado</field>
        <field name="sequence" eval="100055"/>
        <field name="code">045</field>
        <field name="l10n_mx_edi_code">045</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_045 and inputs.d_045.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_045_bf" model="hr.payslip.input.type">
        <field name="code">d_045</field>
        <field name="name">Ajuste en Prima por antigüedad Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_046_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Pagos por separación Exento</field>
        <field name="sequence" eval="100060"/>
        <field name="code">046</field>
        <field name="l10n_mx_edi_code">046</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_046 and inputs.d_046.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_046_bf" model="hr.payslip.input.type">
        <field name="code">d_046</field>
        <field name="name">Ajuste en Pagos por separación Exento</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_047_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Pagos por separación Gravado</field>
        <field name="sequence" eval="100065"/>
        <field name="code">047</field>
        <field name="l10n_mx_edi_code">047</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_047 and inputs.d_047.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_047_bf" model="hr.payslip.input.type">
        <field name="code">d_047</field>
        <field name="name">Ajuste en Pagos por separación Gravado</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_067_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Pagos por separación Acumulable</field>
        <field name="sequence" eval="100070"/>
        <field name="code">067</field>
        <field name="l10n_mx_edi_code">067</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_067 and inputs.d_067.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_067_bf" model="hr.payslip.input.type">
        <field name="code">d_067</field>
        <field name="name">Ajuste en Pagos por separación Acumulable</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_068_bf" model="hr.salary.rule">
        <field name="name">Ajuste en Pagos por separación No Acumulable</field>
        <field name="sequence" eval="100075"/>
        <field name="code">068</field>
        <field name="l10n_mx_edi_code">068</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.d_068 and inputs.d_068.amount</field>
    </record>
    <record id="hr_payslip_input_type_deduction_068_bf" model="hr.payslip.input.type">
        <field name="code">d_068</field>
        <field name="name">Ajuste en Pagos por separación No Acumulable</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_002_03_bf" model="hr.salary.rule">
        <field name="name">Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="sequence" eval="100080"/>
        <field name="code">OP002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0.01 if employee.l10n_mx_edi_contract_regime_type == '02' else 0
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_999_internet_bf" model="hr.salary.rule">
        <field name="name">Apoyo de internet por teletrabajo</field>
        <field name="sequence" eval="100999"/>
        <field name="code">OPI999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.opi_999 and inputs.opi_999.amount
        </field>
    </record>
    <record id="hr_payslip_input_type_other_payment_999_internet_bf" model="hr.payslip.input.type">
        <field name="code">opi_999</field>
        <field name="name">Apoyo de internet por teletrabajo</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_999_luz_bf" model="hr.salary.rule">
        <field name="name">Apoyo de luz por teletrabajo</field>
        <field name="sequence" eval="100999"/>
        <field name="code">OPL999</field>
        <field name="l10n_mx_edi_code">999</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.opl_999 and inputs.opl_999.amount
        </field>
    </record>
    <record id="hr_payslip_input_type_other_payment_999_luz_bf" model="hr.payslip.input.type">
        <field name="code">opl_999</field>
        <field name="name">Apoyo de luz por teletrabajo</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_06')])]"/>
    </record>
    <!-- Sueldo Neto -->
    <record id="hr_rule_net_salary_0_bf" model="hr.salary.rule">
        <field name="name">Net Salary</field>
        <field name="sequence" eval="1000000"/>
        <field name="code">NetSalary</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PERGRA - categories.DEDUC + categories.PEREXE + categories.OTHER</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_seguridad_social_company_bf" model="hr.salary.rule">
        <field name="name">Seguridad social Compañía</field>
        <field name="sequence" eval="1000001"/>
        <field name="code">SSComp</field>
        <field name="category_id" ref="hr_payroll.COMP"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    sbc = contract.l10n_mx_edi_sdi_total
    uma = contract.company_id.l10n_mx_edi_uma
    days_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE140') and worked_days. LEAVE140.number_of_days or 0.0
    # Generic Time Off
    days_work += worked_days.dict.get('LEAVE100') and worked_days.LEAVE100.number_of_days or 0.0
    leaves = worked_days.dict.get('LEAVE90') and worked_days.LEAVE90.number_of_days or 0.0
    specie_fixed = uma * 0.204 * (days_work + leaves)
    specie_excess = ((sbc - (uma * 3)) * 0.011 * (days_work + leaves)) if (sbc - (uma * 3)) &gt; 0 else 0
    aux = sbc * days_work
    benefits = 0.007 * sbc * (days_work + leaves)
    pensioners = 0.0105 * sbc * (days_work + leaves)
    disability = 0.0175 * aux
    risk = (employee.l10n_mx_edi_risk_rank if not employee.l10n_mx_edi_employer_registration_id else employee.l10n_mx_edi_employer_registration_id.job_risk_id).percentage / 100 * aux
    kindergarten = 0.01 * aux

    result = specie_fixed + specie_excess + benefits + pensioners + disability + risk + kindergarten
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_infonavit_company_bf" model="hr.salary.rule">
        <field name="name">Infonavit Compañía</field>
        <field name="sequence" eval="1000002"/>
        <field name="code">InfComp</field>
        <field name="category_id" ref="hr_payroll.COMP"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    sbc = contract.l10n_mx_edi_sdi_total
    days_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE110') and worked_days.LEAVE110.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE111') and worked_days.LEAVE111.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE112') and worked_days.LEAVE112.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE113') and worked_days.LEAVE113.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE140') and worked_days.LEAVE140.number_of_days or 0.0
    aux = sbc * days_work
    infonavit = 0.05 * aux

    result = infonavit
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_retirement_company_bf" model="hr.salary.rule">
        <field name="name">Retiro Compañía</field>
        <field name="sequence" eval="1000003"/>
        <field name="code">RetComp</field>
        <field name="category_id" ref="hr_payroll.COMP"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    sbc = contract.l10n_mx_edi_sdi_total
    days_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE110') and worked_days.LEAVE110.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE111') and worked_days.LEAVE111.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE112') and worked_days.LEAVE112.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE113') and worked_days.LEAVE113.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE140') and worked_days.LEAVE140.number_of_days or 0.0
    aux = sbc * days_work
    retirement = 0.02 * aux

    result = retirement
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_cesantia_company_bf" model="hr.salary.rule">
        <field name="name">Cesantía en edad avanzada y vejez Compañía</field>
        <field name="sequence" eval="1000004"/>
        <field name="code">CesComp</field>
        <field name="category_id" ref="hr_payroll.COMP"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0
if not employee.l10n_mx_edi_is_assimilated:
    sbc = contract.l10n_mx_edi_sdi_total
    days_work = worked_days.dict.get('WORK100') and worked_days.WORK100.number_of_days or 0.0
    days_work += worked_days.dict.get('LEAVE140') and worked_days.LEAVE140.number_of_days or 0.0
    aux = sbc * days_work
    unemployment = 0.0315 * aux

    result = unemployment
        </field>
    </record>
    <record id="hr_rule_l10n_mx_isn_finiquito_bf" model="hr.salary.rule">
        <field name="name">ISN Finiquito</field>
        <field name="sequence" eval="1000005"/>
        <field name="code">ISNF</field>
        <field name="category_id" ref="hr_payroll.COMP"/>
        <field name="struct_id" ref="payroll_structure_data_06"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="note">Gravado multiplicado por el porcentaje de ISN del estado de la dirección de trabajo y agregado a Company Contribution</field>
        <field name="amount_python_compute">
income_period = sum([PG022, PE022, PG1023, PE2023, PG2023, PG3023, PE3023 , PG025, PE025])
result= income_period * employee.address_id.state_id.l10n_mx_payslip_isn
        </field>
    </record>
</odoo>
