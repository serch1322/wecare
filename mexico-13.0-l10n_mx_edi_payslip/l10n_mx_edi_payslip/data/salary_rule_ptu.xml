<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <!-- Perceptions -->
    <record id="hr_rule_l10n_mx_payroll_perception_003_g_ptu" model="hr.salary.rule">
        <field name="name">Participación de los Trabajadores en las Utilidades PTU</field>
        <field name="sequence" eval="3001"/>
        <field name="code">PG003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_taxed"/>
        <field name="struct_id" ref="payroll_structure_data_05"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.PTU and (inputs.PTU.amount - PE003)
        </field>
        <field name="note">Sólo 15 UMAs quedan de exento, el excedente es gravado</field>
    </record>
    <record id="hr_payslip_input_type_perception_003_ptu" model="hr.payslip.input.type">
        <field name="code">PTU</field>
        <field name="name">Participación de los Trabajadores en las Utilidades PTU</field>
        <field name="struct_ids" eval="[(6, 0, [ref('payroll_structure_data_05')])]"/>
    </record>
    <record id="hr_rule_l10n_mx_payroll_perception_003_e_ptu" model="hr.salary.rule">
        <field name="name">Participación de los Trabajadores en las Utilidades PTU</field>
        <field name="sequence" eval="3000"/>
        <field name="code">PE003</field>
        <field name="l10n_mx_edi_code">003</field>
        <field name="category_id" ref="hr_salary_rule_category_perception_mx_exempt"/>
        <field name="struct_id" ref="payroll_structure_data_05"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = inputs.PTU and inputs.PTU.amount
exempt = contract.company_id.l10n_mx_edi_uma * 15
result = exempt if result &gt;= exempt else result
        </field>
        <field name="note">Sólo 15 días de SM queda exento, el excedente es gravado</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_isr_ptu" model="hr.salary.rule">
        <field name="name">AUX ISR</field>
        <field name="sequence" eval="53500"/>
        <field name="code">AUX_ISR</field>
        <field name="category_id" ref="hr_salary_rule_category_aux_mx"/>
        <field name="struct_id" ref="payroll_structure_data_05"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
income_period = categories.PERGRA
# Table ISR (limite_inferior, limite_superior, cuota_fija, tasa)
table = {'05': [(0.01, 644.58, 0.00, 0.0192), (644.59, 5470.92, 12.38, 0.0640),
         (5470.93, 9614.66, 321.26, 0.1088), (9614.67, 11176.62, 772.10, 0.1600),
         (11176.63, 13381.47, 1022.01, 0.1792), (13381.48, 26988.5, 1417.12, 0.2136),
         (26988.51, 42537.58, 4323.58, 0.2352), (42537.59, 81211.25, 7980.73, 0.3000),
         (81211.26, 108281.67, 19582.83, 0.3200), (108281.68, 324845.01, 28245.36, 0.3400),
         (324845.01, 999999999, 101876.9, 0.3500)],
         '04': [(0.01, 318.0, 0.00, 0.0192), (318.01, 2699.4, 6.15, 0.0640),
         (2699.41, 4744.05, 158.55,  0.1088), (4744.06, 5514.75, 381.00,  0.1600),
         (5514.76, 6602.7, 504.3,  0.1792), (6602.71, 13316.7, 699.3, 0.2136),
         (13316.71, 20988.9, 2133.3, 0.2352), (20988.91, 40071.3, 3937.8, 0.3000),
         (40071.31, 53428.5, 9662.55, 0.3200), (53428.51, 160285.35, 13936.80, 0.3400),
         (160285.36, 999999999, 50268.15, 0.3500)],
         '02': [(0.01, 148.4, 0.00, 0.0192), (148.41, 1259.72, 2.87, 0.0640),
         (1259.73, 2213.89, 73.99, 0.1088), (2213.90, 2573.55, 177.80, 0.1600),
         (2573.56, 3081.26, 235.34, 0.1792), (3081.27, 6214.46, 326.34, 0.2136),
         (6214.47, 9794.82, 995.54, 0.2352), (9794.83, 18699.94, 1837.64, 0.3000),
         (18699.95, 24933.30, 4509.19, 0.3200), (24933.31, 74799.83, 6503.84, 0.3400),
         (74799.84, 99999999, 23458.47, 0.3500)],
         '01': [(0.01, 21.20, 0.00, 0.0192), (21.21, 179.96, 0.41, 0.0640),
         (179.97, 316.27, 10.57, 0.1088), (316.28, 367.65, 25.40, 0.1600),
         (367.66, 440.18, 33.62, 0.1792), (440.19, 887.78, 46.62, 0.2136),
         (887.79, 1399.26, 142.22, 0.2352), (1399.27, 2671.42, 262.52, 0.3000),
         (2671.43, 3561.90, 644.17, 0.3200), (3561.91, 10685.69, 929.12, 0.3400),
         (10685.70, 99999999, 3351.21, 0.3500)],
         '10': [(0.01, 212, 0.00, 0.0192), (212.01, 1799.6, 4.10, 0.0640),
         (1799.61, 3162.70, 105.70, 0.1088), (3162.71, 3676.50, 254, 0.1600),
         (3676.51, 4401.80, 466.20, 0.1792), (4401.81, 8877.80, 466.20, 0.2136),
         (8877.81, 13992.60, 1422.20, 0.2352), (13992.61, 26714.20, 2625.20, 0.3000),
         (26714.21, 35619, 6441.70, 0.3200), (35619.01, 106856.90, 9291.20, 0.3400),
         (106856.91, 99999999, 33512.10, 0.3500)]}
result = 0
table_isr = table.get(contract.l10n_mx_edi_schedule_pay, [])
if table_isr:
    for value in table_isr:
        if income_period >=value[0] and value[1] >= income_period:
            extra = income_period - value[0]
            result = ((extra * value[3]) + value[2])
            break
payslips = employee.slip_ids.filtered(lambda sl: sl.state == 'done' and sl.id != payslip.id and sl.date_from.month == payslip.date_from.month and sl.date_from.year == payslip.date_from.year)
if payslips and not payslip.company_id.l10n_mx_edi_isr_annual_adjustment and payslip.dict.l10n_mx_edi_is_last_payslip():
    category = employee.env.ref('l10n_mx_edi_payslip.hr_salary_rule_category_perception_mx_taxed')
    lines = payslips.mapped('line_ids')
    income_monthly = income_period + sum(lines.filtered(lambda li: li.category_id.id == category.id).mapped('total'))
    for value in table['05']:
        if income_monthly >=value[0] and value[1] >= income_monthly:
            extra = income_monthly - value[0]
            result = ((extra * value[3]) + value[2])
            break
    rule = employee.env.ref('l10n_mx_edi_payslip.hr_rule_l10n_mx_payroll_deduction_isr')
    result -= sum(lines.filtered(lambda li: li.salary_rule_id == rule).mapped('total'))
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_other_payment_002_ptu" model="hr.salary.rule">
        <field name="name">Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="code">OPTU002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="sequence">87000</field>
        <field name="category_id" ref="hr_salary_rule_category_other_mx"/>
        <field name="struct_id" ref="payroll_structure_data_05"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0.01 if employee.l10n_mx_edi_contract_regime_type == '02' else 0
        </field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_002_ptu" model="hr.salary.rule">
        <field name="name">ISR</field>
        <field name="sequence" eval="55000"/>
        <field name="code">002</field>
        <field name="l10n_mx_edi_code">002</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_05"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
# Based on http://www.sat.gob.mx/informacion_fiscal/devoluciones_compensaciones/Paginas/subsidio_al_empleo.aspx
# TODO - Complete tables
result = 0.00
if not employee.l10n_mx_edi_is_assimilated:
    income_period = categories.PERGRA
    table = {
        '05': [
            (0.01, 1768.96, 407.02),
            (1768.97, 2653.38, 406.83),
            (2653.39, 3472.84, 406.62),
            (3472.85, 3537.87, 392.77),
            (3537.88, 4446.15, 382.46),
            (4446.16, 4717.18, 354.23),
            (4717.19, 5335.42, 324.87),
            (5335.43, 6224.67, 294.63),
            (6224.68, 7113.90, 253.54),
            (7113.91, 7382.33, 217.61),
            (7382.34, 99999999.00, 0)],
        '04': [
            (0.01, 872.85, 200.85),
            (872.86, 1309.20, 200.70),
            (1309.21, 1713.60, 200.70),
            (1713.61, 1745.70, 193.80),
            (1745.71, 2193.75, 188.70),
            (2193.76, 2327.55, 174.75),
            (2327.56, 2632.65, 160.35),
            (2632.66, 3071.40, 145.35),
            (3071.41, 3510.15, 125.10),
            (3510.16, 3642.60, 107.40),
            (3642.61, 99999999.00, 0)],
    }
    table = table.get(contract.l10n_mx_edi_schedule_pay, [])
    if table:
        for value in table:
            if income_period >=value[0] and value[1] >= income_period:
                result = value[2]
                break</field>
    </record>
    <record id="hr_rule_l10n_mx_payroll_deduction_071_ptu" model="hr.salary.rule">
        <field name="name">Ajuste en Subsidio para el empleo - efectivamente entregado al trabajador</field>
        <field name="sequence" eval="81700"/>
        <field name="code">PTU071</field>
        <field name="l10n_mx_edi_code">071</field>
        <field name="category_id" ref="hr_salary_rule_category_deduction_mx"/>
        <field name="struct_id" ref="payroll_structure_data_05"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">
result = 0.01 if employee.l10n_mx_edi_contract_regime_type == '02' else 0
        </field>
    </record>
    <!-- Sueldo Neto -->
    <record id="hr_rule_net_salary_0_ptu" model="hr.salary.rule">
        <field name="name">Net Salary</field>
        <field name="sequence" eval="1000000"/>
        <field name="code">NetSalary</field>
        <field name="category_id" ref="hr_salary_rule_category_netsa_mx"/>
        <field name="struct_id" ref="payroll_structure_data_05"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.PERGRA - categories.DEDUC + categories.PEREXE + categories.OTHER</field>
    </record>
</odoo>
